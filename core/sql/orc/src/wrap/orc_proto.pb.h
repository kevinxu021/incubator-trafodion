// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orc_proto.proto

#ifndef PROTOBUF_orc_5fproto_2eproto__INCLUDED
#define PROTOBUF_orc_5fproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace orc {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_orc_5fproto_2eproto();
void protobuf_AssignDesc_orc_5fproto_2eproto();
void protobuf_ShutdownFile_orc_5fproto_2eproto();

class IntegerStatistics;
class DoubleStatistics;
class StringStatistics;
class BucketStatistics;
class DecimalStatistics;
class DateStatistics;
class TimestampStatistics;
class BinaryStatistics;
class ColumnStatistics;
class RowIndexEntry;
class RowIndex;
class BloomFilter;
class BloomFilterIndex;
class Stream;
class ColumnEncoding;
class StripeFooter;
class Type;
class StripeInformation;
class UserMetadataItem;
class StripeStatistics;
class Metadata;
class Footer;
class PostScript;
class FileTail;

enum Stream_Kind {
  Stream_Kind_PRESENT = 0,
  Stream_Kind_DATA = 1,
  Stream_Kind_LENGTH = 2,
  Stream_Kind_DICTIONARY_DATA = 3,
  Stream_Kind_DICTIONARY_COUNT = 4,
  Stream_Kind_SECONDARY = 5,
  Stream_Kind_ROW_INDEX = 6,
  Stream_Kind_BLOOM_FILTER = 7
};
bool Stream_Kind_IsValid(int value);
const Stream_Kind Stream_Kind_Kind_MIN = Stream_Kind_PRESENT;
const Stream_Kind Stream_Kind_Kind_MAX = Stream_Kind_BLOOM_FILTER;
const int Stream_Kind_Kind_ARRAYSIZE = Stream_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stream_Kind_descriptor();
inline const ::std::string& Stream_Kind_Name(Stream_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stream_Kind_descriptor(), value);
}
inline bool Stream_Kind_Parse(
    const ::std::string& name, Stream_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stream_Kind>(
    Stream_Kind_descriptor(), name, value);
}
enum ColumnEncoding_Kind {
  ColumnEncoding_Kind_DIRECT = 0,
  ColumnEncoding_Kind_DICTIONARY = 1,
  ColumnEncoding_Kind_DIRECT_V2 = 2,
  ColumnEncoding_Kind_DICTIONARY_V2 = 3
};
bool ColumnEncoding_Kind_IsValid(int value);
const ColumnEncoding_Kind ColumnEncoding_Kind_Kind_MIN = ColumnEncoding_Kind_DIRECT;
const ColumnEncoding_Kind ColumnEncoding_Kind_Kind_MAX = ColumnEncoding_Kind_DICTIONARY_V2;
const int ColumnEncoding_Kind_Kind_ARRAYSIZE = ColumnEncoding_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* ColumnEncoding_Kind_descriptor();
inline const ::std::string& ColumnEncoding_Kind_Name(ColumnEncoding_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    ColumnEncoding_Kind_descriptor(), value);
}
inline bool ColumnEncoding_Kind_Parse(
    const ::std::string& name, ColumnEncoding_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ColumnEncoding_Kind>(
    ColumnEncoding_Kind_descriptor(), name, value);
}
enum Type_Kind {
  Type_Kind_BOOLEAN = 0,
  Type_Kind_BYTE = 1,
  Type_Kind_SHORT = 2,
  Type_Kind_INT = 3,
  Type_Kind_LONG = 4,
  Type_Kind_FLOAT = 5,
  Type_Kind_DOUBLE = 6,
  Type_Kind_STRING = 7,
  Type_Kind_BINARY = 8,
  Type_Kind_TIMESTAMP = 9,
  Type_Kind_LIST = 10,
  Type_Kind_MAP = 11,
  Type_Kind_STRUCT = 12,
  Type_Kind_UNION = 13,
  Type_Kind_DECIMAL = 14,
  Type_Kind_DATE = 15,
  Type_Kind_VARCHAR = 16,
  Type_Kind_CHAR = 17
};
bool Type_Kind_IsValid(int value);
const Type_Kind Type_Kind_Kind_MIN = Type_Kind_BOOLEAN;
const Type_Kind Type_Kind_Kind_MAX = Type_Kind_CHAR;
const int Type_Kind_Kind_ARRAYSIZE = Type_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_Kind_descriptor();
inline const ::std::string& Type_Kind_Name(Type_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_Kind_descriptor(), value);
}
inline bool Type_Kind_Parse(
    const ::std::string& name, Type_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type_Kind>(
    Type_Kind_descriptor(), name, value);
}
enum CompressionKind {
  NONE = 0,
  ZLIB = 1,
  SNAPPY = 2,
  LZO = 3,
  LZ4 = 4,
  ZSTD = 5
};
bool CompressionKind_IsValid(int value);
const CompressionKind CompressionKind_MIN = NONE;
const CompressionKind CompressionKind_MAX = ZSTD;
const int CompressionKind_ARRAYSIZE = CompressionKind_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompressionKind_descriptor();
inline const ::std::string& CompressionKind_Name(CompressionKind value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompressionKind_descriptor(), value);
}
inline bool CompressionKind_Parse(
    const ::std::string& name, CompressionKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompressionKind>(
    CompressionKind_descriptor(), name, value);
}
// ===================================================================

class IntegerStatistics : public ::google::protobuf::Message {
 public:
  IntegerStatistics();
  virtual ~IntegerStatistics();
  
  IntegerStatistics(const IntegerStatistics& from);
  
  inline IntegerStatistics& operator=(const IntegerStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntegerStatistics& default_instance();
  
  void Swap(IntegerStatistics* other);
  
  // implements Message ----------------------------------------------
  
  IntegerStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntegerStatistics& from);
  void MergeFrom(const IntegerStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint64 minimum = 1;
  inline bool has_minimum() const;
  inline void clear_minimum();
  static const int kMinimumFieldNumber = 1;
  inline ::google::protobuf::int64 minimum() const;
  inline void set_minimum(::google::protobuf::int64 value);
  
  // optional sint64 maximum = 2;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 2;
  inline ::google::protobuf::int64 maximum() const;
  inline void set_maximum(::google::protobuf::int64 value);
  
  // optional sint64 sum = 3;
  inline bool has_sum() const;
  inline void clear_sum();
  static const int kSumFieldNumber = 3;
  inline ::google::protobuf::int64 sum() const;
  inline void set_sum(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.IntegerStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 minimum_;
  ::google::protobuf::int64 maximum_;
  ::google::protobuf::int64 sum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IntegerStatistics* default_instance_;
};
// -------------------------------------------------------------------

class DoubleStatistics : public ::google::protobuf::Message {
 public:
  DoubleStatistics();
  virtual ~DoubleStatistics();
  
  DoubleStatistics(const DoubleStatistics& from);
  
  inline DoubleStatistics& operator=(const DoubleStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleStatistics& default_instance();
  
  void Swap(DoubleStatistics* other);
  
  // implements Message ----------------------------------------------
  
  DoubleStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleStatistics& from);
  void MergeFrom(const DoubleStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional double minimum = 1;
  inline bool has_minimum() const;
  inline void clear_minimum();
  static const int kMinimumFieldNumber = 1;
  inline double minimum() const;
  inline void set_minimum(double value);
  
  // optional double maximum = 2;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 2;
  inline double maximum() const;
  inline void set_maximum(double value);
  
  // optional double sum = 3;
  inline bool has_sum() const;
  inline void clear_sum();
  static const int kSumFieldNumber = 3;
  inline double sum() const;
  inline void set_sum(double value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.DoubleStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  double minimum_;
  double maximum_;
  double sum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DoubleStatistics* default_instance_;
};
// -------------------------------------------------------------------

class StringStatistics : public ::google::protobuf::Message {
 public:
  StringStatistics();
  virtual ~StringStatistics();
  
  StringStatistics(const StringStatistics& from);
  
  inline StringStatistics& operator=(const StringStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringStatistics& default_instance();
  
  void Swap(StringStatistics* other);
  
  // implements Message ----------------------------------------------
  
  StringStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringStatistics& from);
  void MergeFrom(const StringStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string minimum = 1;
  inline bool has_minimum() const;
  inline void clear_minimum();
  static const int kMinimumFieldNumber = 1;
  inline const ::std::string& minimum() const;
  inline void set_minimum(const ::std::string& value);
  inline void set_minimum(const char* value);
  inline void set_minimum(const char* value, size_t size);
  inline ::std::string* mutable_minimum();
  
  // optional string maximum = 2;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 2;
  inline const ::std::string& maximum() const;
  inline void set_maximum(const ::std::string& value);
  inline void set_maximum(const char* value);
  inline void set_maximum(const char* value, size_t size);
  inline ::std::string* mutable_maximum();
  
  // optional sint64 sum = 3;
  inline bool has_sum() const;
  inline void clear_sum();
  static const int kSumFieldNumber = 3;
  inline ::google::protobuf::int64 sum() const;
  inline void set_sum(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.StringStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* minimum_;
  static const ::std::string _default_minimum_;
  ::std::string* maximum_;
  static const ::std::string _default_maximum_;
  ::google::protobuf::int64 sum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StringStatistics* default_instance_;
};
// -------------------------------------------------------------------

class BucketStatistics : public ::google::protobuf::Message {
 public:
  BucketStatistics();
  virtual ~BucketStatistics();
  
  BucketStatistics(const BucketStatistics& from);
  
  inline BucketStatistics& operator=(const BucketStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BucketStatistics& default_instance();
  
  void Swap(BucketStatistics* other);
  
  // implements Message ----------------------------------------------
  
  BucketStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BucketStatistics& from);
  void MergeFrom(const BucketStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint64 count = 1 [packed = true];
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint64 count(int index) const;
  inline void set_count(int index, ::google::protobuf::uint64 value);
  inline void add_count(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_count();
  
  // @@protoc_insertion_point(class_scope:orc.proto.BucketStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > count_;
  mutable int _count_cached_byte_size_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BucketStatistics* default_instance_;
};
// -------------------------------------------------------------------

class DecimalStatistics : public ::google::protobuf::Message {
 public:
  DecimalStatistics();
  virtual ~DecimalStatistics();
  
  DecimalStatistics(const DecimalStatistics& from);
  
  inline DecimalStatistics& operator=(const DecimalStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DecimalStatistics& default_instance();
  
  void Swap(DecimalStatistics* other);
  
  // implements Message ----------------------------------------------
  
  DecimalStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DecimalStatistics& from);
  void MergeFrom(const DecimalStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string minimum = 1;
  inline bool has_minimum() const;
  inline void clear_minimum();
  static const int kMinimumFieldNumber = 1;
  inline const ::std::string& minimum() const;
  inline void set_minimum(const ::std::string& value);
  inline void set_minimum(const char* value);
  inline void set_minimum(const char* value, size_t size);
  inline ::std::string* mutable_minimum();
  
  // optional string maximum = 2;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 2;
  inline const ::std::string& maximum() const;
  inline void set_maximum(const ::std::string& value);
  inline void set_maximum(const char* value);
  inline void set_maximum(const char* value, size_t size);
  inline ::std::string* mutable_maximum();
  
  // optional string sum = 3;
  inline bool has_sum() const;
  inline void clear_sum();
  static const int kSumFieldNumber = 3;
  inline const ::std::string& sum() const;
  inline void set_sum(const ::std::string& value);
  inline void set_sum(const char* value);
  inline void set_sum(const char* value, size_t size);
  inline ::std::string* mutable_sum();
  
  // @@protoc_insertion_point(class_scope:orc.proto.DecimalStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* minimum_;
  static const ::std::string _default_minimum_;
  ::std::string* maximum_;
  static const ::std::string _default_maximum_;
  ::std::string* sum_;
  static const ::std::string _default_sum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DecimalStatistics* default_instance_;
};
// -------------------------------------------------------------------

class DateStatistics : public ::google::protobuf::Message {
 public:
  DateStatistics();
  virtual ~DateStatistics();
  
  DateStatistics(const DateStatistics& from);
  
  inline DateStatistics& operator=(const DateStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DateStatistics& default_instance();
  
  void Swap(DateStatistics* other);
  
  // implements Message ----------------------------------------------
  
  DateStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DateStatistics& from);
  void MergeFrom(const DateStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint32 minimum = 1;
  inline bool has_minimum() const;
  inline void clear_minimum();
  static const int kMinimumFieldNumber = 1;
  inline ::google::protobuf::int32 minimum() const;
  inline void set_minimum(::google::protobuf::int32 value);
  
  // optional sint32 maximum = 2;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 2;
  inline ::google::protobuf::int32 maximum() const;
  inline void set_maximum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.DateStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 minimum_;
  ::google::protobuf::int32 maximum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DateStatistics* default_instance_;
};
// -------------------------------------------------------------------

class TimestampStatistics : public ::google::protobuf::Message {
 public:
  TimestampStatistics();
  virtual ~TimestampStatistics();
  
  TimestampStatistics(const TimestampStatistics& from);
  
  inline TimestampStatistics& operator=(const TimestampStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimestampStatistics& default_instance();
  
  void Swap(TimestampStatistics* other);
  
  // implements Message ----------------------------------------------
  
  TimestampStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimestampStatistics& from);
  void MergeFrom(const TimestampStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint64 minimum = 1;
  inline bool has_minimum() const;
  inline void clear_minimum();
  static const int kMinimumFieldNumber = 1;
  inline ::google::protobuf::int64 minimum() const;
  inline void set_minimum(::google::protobuf::int64 value);
  
  // optional sint64 maximum = 2;
  inline bool has_maximum() const;
  inline void clear_maximum();
  static const int kMaximumFieldNumber = 2;
  inline ::google::protobuf::int64 maximum() const;
  inline void set_maximum(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.TimestampStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 minimum_;
  ::google::protobuf::int64 maximum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TimestampStatistics* default_instance_;
};
// -------------------------------------------------------------------

class BinaryStatistics : public ::google::protobuf::Message {
 public:
  BinaryStatistics();
  virtual ~BinaryStatistics();
  
  BinaryStatistics(const BinaryStatistics& from);
  
  inline BinaryStatistics& operator=(const BinaryStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryStatistics& default_instance();
  
  void Swap(BinaryStatistics* other);
  
  // implements Message ----------------------------------------------
  
  BinaryStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryStatistics& from);
  void MergeFrom(const BinaryStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint64 sum = 1;
  inline bool has_sum() const;
  inline void clear_sum();
  static const int kSumFieldNumber = 1;
  inline ::google::protobuf::int64 sum() const;
  inline void set_sum(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.BinaryStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 sum_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BinaryStatistics* default_instance_;
};
// -------------------------------------------------------------------

class ColumnStatistics : public ::google::protobuf::Message {
 public:
  ColumnStatistics();
  virtual ~ColumnStatistics();
  
  ColumnStatistics(const ColumnStatistics& from);
  
  inline ColumnStatistics& operator=(const ColumnStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnStatistics& default_instance();
  
  void Swap(ColumnStatistics* other);
  
  // implements Message ----------------------------------------------
  
  ColumnStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColumnStatistics& from);
  void MergeFrom(const ColumnStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 numberOfValues = 1;
  inline bool has_numberofvalues() const;
  inline void clear_numberofvalues();
  static const int kNumberOfValuesFieldNumber = 1;
  inline ::google::protobuf::uint64 numberofvalues() const;
  inline void set_numberofvalues(::google::protobuf::uint64 value);
  
  // optional .orc.proto.IntegerStatistics intStatistics = 2;
  inline bool has_intstatistics() const;
  inline void clear_intstatistics();
  static const int kIntStatisticsFieldNumber = 2;
  inline const ::orc::proto::IntegerStatistics& intstatistics() const;
  inline ::orc::proto::IntegerStatistics* mutable_intstatistics();
  
  // optional .orc.proto.DoubleStatistics doubleStatistics = 3;
  inline bool has_doublestatistics() const;
  inline void clear_doublestatistics();
  static const int kDoubleStatisticsFieldNumber = 3;
  inline const ::orc::proto::DoubleStatistics& doublestatistics() const;
  inline ::orc::proto::DoubleStatistics* mutable_doublestatistics();
  
  // optional .orc.proto.StringStatistics stringStatistics = 4;
  inline bool has_stringstatistics() const;
  inline void clear_stringstatistics();
  static const int kStringStatisticsFieldNumber = 4;
  inline const ::orc::proto::StringStatistics& stringstatistics() const;
  inline ::orc::proto::StringStatistics* mutable_stringstatistics();
  
  // optional .orc.proto.BucketStatistics bucketStatistics = 5;
  inline bool has_bucketstatistics() const;
  inline void clear_bucketstatistics();
  static const int kBucketStatisticsFieldNumber = 5;
  inline const ::orc::proto::BucketStatistics& bucketstatistics() const;
  inline ::orc::proto::BucketStatistics* mutable_bucketstatistics();
  
  // optional .orc.proto.DecimalStatistics decimalStatistics = 6;
  inline bool has_decimalstatistics() const;
  inline void clear_decimalstatistics();
  static const int kDecimalStatisticsFieldNumber = 6;
  inline const ::orc::proto::DecimalStatistics& decimalstatistics() const;
  inline ::orc::proto::DecimalStatistics* mutable_decimalstatistics();
  
  // optional .orc.proto.DateStatistics dateStatistics = 7;
  inline bool has_datestatistics() const;
  inline void clear_datestatistics();
  static const int kDateStatisticsFieldNumber = 7;
  inline const ::orc::proto::DateStatistics& datestatistics() const;
  inline ::orc::proto::DateStatistics* mutable_datestatistics();
  
  // optional .orc.proto.BinaryStatistics binaryStatistics = 8;
  inline bool has_binarystatistics() const;
  inline void clear_binarystatistics();
  static const int kBinaryStatisticsFieldNumber = 8;
  inline const ::orc::proto::BinaryStatistics& binarystatistics() const;
  inline ::orc::proto::BinaryStatistics* mutable_binarystatistics();
  
  // optional .orc.proto.TimestampStatistics timestampStatistics = 9;
  inline bool has_timestampstatistics() const;
  inline void clear_timestampstatistics();
  static const int kTimestampStatisticsFieldNumber = 9;
  inline const ::orc::proto::TimestampStatistics& timestampstatistics() const;
  inline ::orc::proto::TimestampStatistics* mutable_timestampstatistics();
  
  // optional bool hasNull = 10;
  inline bool has_hasnull() const;
  inline void clear_hasnull();
  static const int kHasNullFieldNumber = 10;
  inline bool hasnull() const;
  inline void set_hasnull(bool value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.ColumnStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 numberofvalues_;
  ::orc::proto::IntegerStatistics* intstatistics_;
  ::orc::proto::DoubleStatistics* doublestatistics_;
  ::orc::proto::StringStatistics* stringstatistics_;
  ::orc::proto::BucketStatistics* bucketstatistics_;
  ::orc::proto::DecimalStatistics* decimalstatistics_;
  ::orc::proto::DateStatistics* datestatistics_;
  ::orc::proto::BinaryStatistics* binarystatistics_;
  ::orc::proto::TimestampStatistics* timestampstatistics_;
  bool hasnull_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ColumnStatistics* default_instance_;
};
// -------------------------------------------------------------------

class RowIndexEntry : public ::google::protobuf::Message {
 public:
  RowIndexEntry();
  virtual ~RowIndexEntry();
  
  RowIndexEntry(const RowIndexEntry& from);
  
  inline RowIndexEntry& operator=(const RowIndexEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RowIndexEntry& default_instance();
  
  void Swap(RowIndexEntry* other);
  
  // implements Message ----------------------------------------------
  
  RowIndexEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowIndexEntry& from);
  void MergeFrom(const RowIndexEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint64 positions = 1 [packed = true];
  inline int positions_size() const;
  inline void clear_positions();
  static const int kPositionsFieldNumber = 1;
  inline ::google::protobuf::uint64 positions(int index) const;
  inline void set_positions(int index, ::google::protobuf::uint64 value);
  inline void add_positions(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      positions() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_positions();
  
  // optional .orc.proto.ColumnStatistics statistics = 2;
  inline bool has_statistics() const;
  inline void clear_statistics();
  static const int kStatisticsFieldNumber = 2;
  inline const ::orc::proto::ColumnStatistics& statistics() const;
  inline ::orc::proto::ColumnStatistics* mutable_statistics();
  
  // @@protoc_insertion_point(class_scope:orc.proto.RowIndexEntry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > positions_;
  mutable int _positions_cached_byte_size_;
  ::orc::proto::ColumnStatistics* statistics_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RowIndexEntry* default_instance_;
};
// -------------------------------------------------------------------

class RowIndex : public ::google::protobuf::Message {
 public:
  RowIndex();
  virtual ~RowIndex();
  
  RowIndex(const RowIndex& from);
  
  inline RowIndex& operator=(const RowIndex& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RowIndex& default_instance();
  
  void Swap(RowIndex* other);
  
  // implements Message ----------------------------------------------
  
  RowIndex* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RowIndex& from);
  void MergeFrom(const RowIndex& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .orc.proto.RowIndexEntry entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::orc::proto::RowIndexEntry& entry(int index) const;
  inline ::orc::proto::RowIndexEntry* mutable_entry(int index);
  inline ::orc::proto::RowIndexEntry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry >*
      mutable_entry();
  
  // @@protoc_insertion_point(class_scope:orc.proto.RowIndex)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry > entry_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RowIndex* default_instance_;
};
// -------------------------------------------------------------------

class BloomFilter : public ::google::protobuf::Message {
 public:
  BloomFilter();
  virtual ~BloomFilter();
  
  BloomFilter(const BloomFilter& from);
  
  inline BloomFilter& operator=(const BloomFilter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BloomFilter& default_instance();
  
  void Swap(BloomFilter* other);
  
  // implements Message ----------------------------------------------
  
  BloomFilter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BloomFilter& from);
  void MergeFrom(const BloomFilter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 numHashFunctions = 1;
  inline bool has_numhashfunctions() const;
  inline void clear_numhashfunctions();
  static const int kNumHashFunctionsFieldNumber = 1;
  inline ::google::protobuf::uint32 numhashfunctions() const;
  inline void set_numhashfunctions(::google::protobuf::uint32 value);
  
  // repeated fixed64 bitset = 2;
  inline int bitset_size() const;
  inline void clear_bitset();
  static const int kBitsetFieldNumber = 2;
  inline ::google::protobuf::uint64 bitset(int index) const;
  inline void set_bitset(int index, ::google::protobuf::uint64 value);
  inline void add_bitset(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      bitset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_bitset();
  
  // @@protoc_insertion_point(class_scope:orc.proto.BloomFilter)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 numhashfunctions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > bitset_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BloomFilter* default_instance_;
};
// -------------------------------------------------------------------

class BloomFilterIndex : public ::google::protobuf::Message {
 public:
  BloomFilterIndex();
  virtual ~BloomFilterIndex();
  
  BloomFilterIndex(const BloomFilterIndex& from);
  
  inline BloomFilterIndex& operator=(const BloomFilterIndex& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BloomFilterIndex& default_instance();
  
  void Swap(BloomFilterIndex* other);
  
  // implements Message ----------------------------------------------
  
  BloomFilterIndex* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BloomFilterIndex& from);
  void MergeFrom(const BloomFilterIndex& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .orc.proto.BloomFilter bloomFilter = 1;
  inline int bloomfilter_size() const;
  inline void clear_bloomfilter();
  static const int kBloomFilterFieldNumber = 1;
  inline const ::orc::proto::BloomFilter& bloomfilter(int index) const;
  inline ::orc::proto::BloomFilter* mutable_bloomfilter(int index);
  inline ::orc::proto::BloomFilter* add_bloomfilter();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter >&
      bloomfilter() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter >*
      mutable_bloomfilter();
  
  // @@protoc_insertion_point(class_scope:orc.proto.BloomFilterIndex)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter > bloomfilter_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BloomFilterIndex* default_instance_;
};
// -------------------------------------------------------------------

class Stream : public ::google::protobuf::Message {
 public:
  Stream();
  virtual ~Stream();
  
  Stream(const Stream& from);
  
  inline Stream& operator=(const Stream& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stream& default_instance();
  
  void Swap(Stream* other);
  
  // implements Message ----------------------------------------------
  
  Stream* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stream& from);
  void MergeFrom(const Stream& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Stream_Kind Kind;
  static const Kind PRESENT = Stream_Kind_PRESENT;
  static const Kind DATA = Stream_Kind_DATA;
  static const Kind LENGTH = Stream_Kind_LENGTH;
  static const Kind DICTIONARY_DATA = Stream_Kind_DICTIONARY_DATA;
  static const Kind DICTIONARY_COUNT = Stream_Kind_DICTIONARY_COUNT;
  static const Kind SECONDARY = Stream_Kind_SECONDARY;
  static const Kind ROW_INDEX = Stream_Kind_ROW_INDEX;
  static const Kind BLOOM_FILTER = Stream_Kind_BLOOM_FILTER;
  static inline bool Kind_IsValid(int value) {
    return Stream_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    Stream_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    Stream_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    Stream_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return Stream_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return Stream_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return Stream_Kind_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .orc.proto.Stream.Kind kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::orc::proto::Stream_Kind kind() const;
  inline void set_kind(::orc::proto::Stream_Kind value);
  
  // optional uint32 column = 2;
  inline bool has_column() const;
  inline void clear_column();
  static const int kColumnFieldNumber = 2;
  inline ::google::protobuf::uint32 column() const;
  inline void set_column(::google::protobuf::uint32 value);
  
  // optional uint64 length = 3;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 3;
  inline ::google::protobuf::uint64 length() const;
  inline void set_length(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.Stream)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int kind_;
  ::google::protobuf::uint32 column_;
  ::google::protobuf::uint64 length_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Stream* default_instance_;
};
// -------------------------------------------------------------------

class ColumnEncoding : public ::google::protobuf::Message {
 public:
  ColumnEncoding();
  virtual ~ColumnEncoding();
  
  ColumnEncoding(const ColumnEncoding& from);
  
  inline ColumnEncoding& operator=(const ColumnEncoding& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnEncoding& default_instance();
  
  void Swap(ColumnEncoding* other);
  
  // implements Message ----------------------------------------------
  
  ColumnEncoding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColumnEncoding& from);
  void MergeFrom(const ColumnEncoding& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ColumnEncoding_Kind Kind;
  static const Kind DIRECT = ColumnEncoding_Kind_DIRECT;
  static const Kind DICTIONARY = ColumnEncoding_Kind_DICTIONARY;
  static const Kind DIRECT_V2 = ColumnEncoding_Kind_DIRECT_V2;
  static const Kind DICTIONARY_V2 = ColumnEncoding_Kind_DICTIONARY_V2;
  static inline bool Kind_IsValid(int value) {
    return ColumnEncoding_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    ColumnEncoding_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    ColumnEncoding_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    ColumnEncoding_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return ColumnEncoding_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return ColumnEncoding_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return ColumnEncoding_Kind_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .orc.proto.ColumnEncoding.Kind kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::orc::proto::ColumnEncoding_Kind kind() const;
  inline void set_kind(::orc::proto::ColumnEncoding_Kind value);
  
  // optional uint32 dictionarySize = 2;
  inline bool has_dictionarysize() const;
  inline void clear_dictionarysize();
  static const int kDictionarySizeFieldNumber = 2;
  inline ::google::protobuf::uint32 dictionarysize() const;
  inline void set_dictionarysize(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.ColumnEncoding)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int kind_;
  ::google::protobuf::uint32 dictionarysize_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ColumnEncoding* default_instance_;
};
// -------------------------------------------------------------------

class StripeFooter : public ::google::protobuf::Message {
 public:
  StripeFooter();
  virtual ~StripeFooter();
  
  StripeFooter(const StripeFooter& from);
  
  inline StripeFooter& operator=(const StripeFooter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StripeFooter& default_instance();
  
  void Swap(StripeFooter* other);
  
  // implements Message ----------------------------------------------
  
  StripeFooter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StripeFooter& from);
  void MergeFrom(const StripeFooter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .orc.proto.Stream streams = 1;
  inline int streams_size() const;
  inline void clear_streams();
  static const int kStreamsFieldNumber = 1;
  inline const ::orc::proto::Stream& streams(int index) const;
  inline ::orc::proto::Stream* mutable_streams(int index);
  inline ::orc::proto::Stream* add_streams();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::Stream >&
      streams() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::Stream >*
      mutable_streams();
  
  // repeated .orc.proto.ColumnEncoding columns = 2;
  inline int columns_size() const;
  inline void clear_columns();
  static const int kColumnsFieldNumber = 2;
  inline const ::orc::proto::ColumnEncoding& columns(int index) const;
  inline ::orc::proto::ColumnEncoding* mutable_columns(int index);
  inline ::orc::proto::ColumnEncoding* add_columns();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding >&
      columns() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding >*
      mutable_columns();
  
  // optional string writerTimezone = 3;
  inline bool has_writertimezone() const;
  inline void clear_writertimezone();
  static const int kWriterTimezoneFieldNumber = 3;
  inline const ::std::string& writertimezone() const;
  inline void set_writertimezone(const ::std::string& value);
  inline void set_writertimezone(const char* value);
  inline void set_writertimezone(const char* value, size_t size);
  inline ::std::string* mutable_writertimezone();
  
  // @@protoc_insertion_point(class_scope:orc.proto.StripeFooter)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::orc::proto::Stream > streams_;
  ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding > columns_;
  ::std::string* writertimezone_;
  static const ::std::string _default_writertimezone_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StripeFooter* default_instance_;
};
// -------------------------------------------------------------------

class Type : public ::google::protobuf::Message {
 public:
  Type();
  virtual ~Type();
  
  Type(const Type& from);
  
  inline Type& operator=(const Type& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Type& default_instance();
  
  void Swap(Type* other);
  
  // implements Message ----------------------------------------------
  
  Type* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Type& from);
  void MergeFrom(const Type& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Type_Kind Kind;
  static const Kind BOOLEAN = Type_Kind_BOOLEAN;
  static const Kind BYTE = Type_Kind_BYTE;
  static const Kind SHORT = Type_Kind_SHORT;
  static const Kind INT = Type_Kind_INT;
  static const Kind LONG = Type_Kind_LONG;
  static const Kind FLOAT = Type_Kind_FLOAT;
  static const Kind DOUBLE = Type_Kind_DOUBLE;
  static const Kind STRING = Type_Kind_STRING;
  static const Kind BINARY = Type_Kind_BINARY;
  static const Kind TIMESTAMP = Type_Kind_TIMESTAMP;
  static const Kind LIST = Type_Kind_LIST;
  static const Kind MAP = Type_Kind_MAP;
  static const Kind STRUCT = Type_Kind_STRUCT;
  static const Kind UNION = Type_Kind_UNION;
  static const Kind DECIMAL = Type_Kind_DECIMAL;
  static const Kind DATE = Type_Kind_DATE;
  static const Kind VARCHAR = Type_Kind_VARCHAR;
  static const Kind CHAR = Type_Kind_CHAR;
  static inline bool Kind_IsValid(int value) {
    return Type_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    Type_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    Type_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    Type_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return Type_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return Type_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return Type_Kind_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .orc.proto.Type.Kind kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::orc::proto::Type_Kind kind() const;
  inline void set_kind(::orc::proto::Type_Kind value);
  
  // repeated uint32 subtypes = 2 [packed = true];
  inline int subtypes_size() const;
  inline void clear_subtypes();
  static const int kSubtypesFieldNumber = 2;
  inline ::google::protobuf::uint32 subtypes(int index) const;
  inline void set_subtypes(int index, ::google::protobuf::uint32 value);
  inline void add_subtypes(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      subtypes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_subtypes();
  
  // repeated string fieldNames = 3;
  inline int fieldnames_size() const;
  inline void clear_fieldnames();
  static const int kFieldNamesFieldNumber = 3;
  inline const ::std::string& fieldnames(int index) const;
  inline ::std::string* mutable_fieldnames(int index);
  inline void set_fieldnames(int index, const ::std::string& value);
  inline void set_fieldnames(int index, const char* value);
  inline void set_fieldnames(int index, const char* value, size_t size);
  inline ::std::string* add_fieldnames();
  inline void add_fieldnames(const ::std::string& value);
  inline void add_fieldnames(const char* value);
  inline void add_fieldnames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& fieldnames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fieldnames();
  
  // optional uint32 maximumLength = 4;
  inline bool has_maximumlength() const;
  inline void clear_maximumlength();
  static const int kMaximumLengthFieldNumber = 4;
  inline ::google::protobuf::uint32 maximumlength() const;
  inline void set_maximumlength(::google::protobuf::uint32 value);
  
  // optional uint32 precision = 5;
  inline bool has_precision() const;
  inline void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  inline ::google::protobuf::uint32 precision() const;
  inline void set_precision(::google::protobuf::uint32 value);
  
  // optional uint32 scale = 6;
  inline bool has_scale() const;
  inline void clear_scale();
  static const int kScaleFieldNumber = 6;
  inline ::google::protobuf::uint32 scale() const;
  inline void set_scale(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.Type)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int kind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > subtypes_;
  mutable int _subtypes_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fieldnames_;
  ::google::protobuf::uint32 maximumlength_;
  ::google::protobuf::uint32 precision_;
  ::google::protobuf::uint32 scale_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Type* default_instance_;
};
// -------------------------------------------------------------------

class StripeInformation : public ::google::protobuf::Message {
 public:
  StripeInformation();
  virtual ~StripeInformation();
  
  StripeInformation(const StripeInformation& from);
  
  inline StripeInformation& operator=(const StripeInformation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StripeInformation& default_instance();
  
  void Swap(StripeInformation* other);
  
  // implements Message ----------------------------------------------
  
  StripeInformation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StripeInformation& from);
  void MergeFrom(const StripeInformation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  inline ::google::protobuf::uint64 offset() const;
  inline void set_offset(::google::protobuf::uint64 value);
  
  // optional uint64 indexLength = 2;
  inline bool has_indexlength() const;
  inline void clear_indexlength();
  static const int kIndexLengthFieldNumber = 2;
  inline ::google::protobuf::uint64 indexlength() const;
  inline void set_indexlength(::google::protobuf::uint64 value);
  
  // optional uint64 dataLength = 3;
  inline bool has_datalength() const;
  inline void clear_datalength();
  static const int kDataLengthFieldNumber = 3;
  inline ::google::protobuf::uint64 datalength() const;
  inline void set_datalength(::google::protobuf::uint64 value);
  
  // optional uint64 footerLength = 4;
  inline bool has_footerlength() const;
  inline void clear_footerlength();
  static const int kFooterLengthFieldNumber = 4;
  inline ::google::protobuf::uint64 footerlength() const;
  inline void set_footerlength(::google::protobuf::uint64 value);
  
  // optional uint64 numberOfRows = 5;
  inline bool has_numberofrows() const;
  inline void clear_numberofrows();
  static const int kNumberOfRowsFieldNumber = 5;
  inline ::google::protobuf::uint64 numberofrows() const;
  inline void set_numberofrows(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.StripeInformation)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 indexlength_;
  ::google::protobuf::uint64 datalength_;
  ::google::protobuf::uint64 footerlength_;
  ::google::protobuf::uint64 numberofrows_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StripeInformation* default_instance_;
};
// -------------------------------------------------------------------

class UserMetadataItem : public ::google::protobuf::Message {
 public:
  UserMetadataItem();
  virtual ~UserMetadataItem();
  
  UserMetadataItem(const UserMetadataItem& from);
  
  inline UserMetadataItem& operator=(const UserMetadataItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMetadataItem& default_instance();
  
  void Swap(UserMetadataItem* other);
  
  // implements Message ----------------------------------------------
  
  UserMetadataItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMetadataItem& from);
  void MergeFrom(const UserMetadataItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  
  // @@protoc_insertion_point(class_scope:orc.proto.UserMetadataItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* value_;
  static const ::std::string _default_value_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UserMetadataItem* default_instance_;
};
// -------------------------------------------------------------------

class StripeStatistics : public ::google::protobuf::Message {
 public:
  StripeStatistics();
  virtual ~StripeStatistics();
  
  StripeStatistics(const StripeStatistics& from);
  
  inline StripeStatistics& operator=(const StripeStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StripeStatistics& default_instance();
  
  void Swap(StripeStatistics* other);
  
  // implements Message ----------------------------------------------
  
  StripeStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StripeStatistics& from);
  void MergeFrom(const StripeStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .orc.proto.ColumnStatistics colStats = 1;
  inline int colstats_size() const;
  inline void clear_colstats();
  static const int kColStatsFieldNumber = 1;
  inline const ::orc::proto::ColumnStatistics& colstats(int index) const;
  inline ::orc::proto::ColumnStatistics* mutable_colstats(int index);
  inline ::orc::proto::ColumnStatistics* add_colstats();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >&
      colstats() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >*
      mutable_colstats();
  
  // @@protoc_insertion_point(class_scope:orc.proto.StripeStatistics)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics > colstats_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StripeStatistics* default_instance_;
};
// -------------------------------------------------------------------

class Metadata : public ::google::protobuf::Message {
 public:
  Metadata();
  virtual ~Metadata();
  
  Metadata(const Metadata& from);
  
  inline Metadata& operator=(const Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Metadata& default_instance();
  
  void Swap(Metadata* other);
  
  // implements Message ----------------------------------------------
  
  Metadata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Metadata& from);
  void MergeFrom(const Metadata& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .orc.proto.StripeStatistics stripeStats = 1;
  inline int stripestats_size() const;
  inline void clear_stripestats();
  static const int kStripeStatsFieldNumber = 1;
  inline const ::orc::proto::StripeStatistics& stripestats(int index) const;
  inline ::orc::proto::StripeStatistics* mutable_stripestats(int index);
  inline ::orc::proto::StripeStatistics* add_stripestats();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics >&
      stripestats() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics >*
      mutable_stripestats();
  
  // @@protoc_insertion_point(class_scope:orc.proto.Metadata)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics > stripestats_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Metadata* default_instance_;
};
// -------------------------------------------------------------------

class Footer : public ::google::protobuf::Message {
 public:
  Footer();
  virtual ~Footer();
  
  Footer(const Footer& from);
  
  inline Footer& operator=(const Footer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Footer& default_instance();
  
  void Swap(Footer* other);
  
  // implements Message ----------------------------------------------
  
  Footer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Footer& from);
  void MergeFrom(const Footer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 headerLength = 1;
  inline bool has_headerlength() const;
  inline void clear_headerlength();
  static const int kHeaderLengthFieldNumber = 1;
  inline ::google::protobuf::uint64 headerlength() const;
  inline void set_headerlength(::google::protobuf::uint64 value);
  
  // optional uint64 contentLength = 2;
  inline bool has_contentlength() const;
  inline void clear_contentlength();
  static const int kContentLengthFieldNumber = 2;
  inline ::google::protobuf::uint64 contentlength() const;
  inline void set_contentlength(::google::protobuf::uint64 value);
  
  // repeated .orc.proto.StripeInformation stripes = 3;
  inline int stripes_size() const;
  inline void clear_stripes();
  static const int kStripesFieldNumber = 3;
  inline const ::orc::proto::StripeInformation& stripes(int index) const;
  inline ::orc::proto::StripeInformation* mutable_stripes(int index);
  inline ::orc::proto::StripeInformation* add_stripes();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation >&
      stripes() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation >*
      mutable_stripes();
  
  // repeated .orc.proto.Type types = 4;
  inline int types_size() const;
  inline void clear_types();
  static const int kTypesFieldNumber = 4;
  inline const ::orc::proto::Type& types(int index) const;
  inline ::orc::proto::Type* mutable_types(int index);
  inline ::orc::proto::Type* add_types();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::Type >&
      types() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::Type >*
      mutable_types();
  
  // repeated .orc.proto.UserMetadataItem metadata = 5;
  inline int metadata_size() const;
  inline void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  inline const ::orc::proto::UserMetadataItem& metadata(int index) const;
  inline ::orc::proto::UserMetadataItem* mutable_metadata(int index);
  inline ::orc::proto::UserMetadataItem* add_metadata();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem >&
      metadata() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem >*
      mutable_metadata();
  
  // optional uint64 numberOfRows = 6;
  inline bool has_numberofrows() const;
  inline void clear_numberofrows();
  static const int kNumberOfRowsFieldNumber = 6;
  inline ::google::protobuf::uint64 numberofrows() const;
  inline void set_numberofrows(::google::protobuf::uint64 value);
  
  // repeated .orc.proto.ColumnStatistics statistics = 7;
  inline int statistics_size() const;
  inline void clear_statistics();
  static const int kStatisticsFieldNumber = 7;
  inline const ::orc::proto::ColumnStatistics& statistics(int index) const;
  inline ::orc::proto::ColumnStatistics* mutable_statistics(int index);
  inline ::orc::proto::ColumnStatistics* add_statistics();
  inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >&
      statistics() const;
  inline ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >*
      mutable_statistics();
  
  // optional uint32 rowIndexStride = 8;
  inline bool has_rowindexstride() const;
  inline void clear_rowindexstride();
  static const int kRowIndexStrideFieldNumber = 8;
  inline ::google::protobuf::uint32 rowindexstride() const;
  inline void set_rowindexstride(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.Footer)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 headerlength_;
  ::google::protobuf::uint64 contentlength_;
  ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation > stripes_;
  ::google::protobuf::RepeatedPtrField< ::orc::proto::Type > types_;
  ::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem > metadata_;
  ::google::protobuf::uint64 numberofrows_;
  ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics > statistics_;
  ::google::protobuf::uint32 rowindexstride_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Footer* default_instance_;
};
// -------------------------------------------------------------------

class PostScript : public ::google::protobuf::Message {
 public:
  PostScript();
  virtual ~PostScript();
  
  PostScript(const PostScript& from);
  
  inline PostScript& operator=(const PostScript& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostScript& default_instance();
  
  void Swap(PostScript* other);
  
  // implements Message ----------------------------------------------
  
  PostScript* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostScript& from);
  void MergeFrom(const PostScript& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 footerLength = 1;
  inline bool has_footerlength() const;
  inline void clear_footerlength();
  static const int kFooterLengthFieldNumber = 1;
  inline ::google::protobuf::uint64 footerlength() const;
  inline void set_footerlength(::google::protobuf::uint64 value);
  
  // optional .orc.proto.CompressionKind compression = 2;
  inline bool has_compression() const;
  inline void clear_compression();
  static const int kCompressionFieldNumber = 2;
  inline orc::proto::CompressionKind compression() const;
  inline void set_compression(orc::proto::CompressionKind value);
  
  // optional uint64 compressionBlockSize = 3;
  inline bool has_compressionblocksize() const;
  inline void clear_compressionblocksize();
  static const int kCompressionBlockSizeFieldNumber = 3;
  inline ::google::protobuf::uint64 compressionblocksize() const;
  inline void set_compressionblocksize(::google::protobuf::uint64 value);
  
  // repeated uint32 version = 4 [packed = true];
  inline int version_size() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 version(int index) const;
  inline void set_version(int index, ::google::protobuf::uint32 value);
  inline void add_version(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      version() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_version();
  
  // optional uint64 metadataLength = 5;
  inline bool has_metadatalength() const;
  inline void clear_metadatalength();
  static const int kMetadataLengthFieldNumber = 5;
  inline ::google::protobuf::uint64 metadatalength() const;
  inline void set_metadatalength(::google::protobuf::uint64 value);
  
  // optional uint32 writerVersion = 6;
  inline bool has_writerversion() const;
  inline void clear_writerversion();
  static const int kWriterVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 writerversion() const;
  inline void set_writerversion(::google::protobuf::uint32 value);
  
  // optional string magic = 8000;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 8000;
  inline const ::std::string& magic() const;
  inline void set_magic(const ::std::string& value);
  inline void set_magic(const char* value);
  inline void set_magic(const char* value, size_t size);
  inline ::std::string* mutable_magic();
  
  // @@protoc_insertion_point(class_scope:orc.proto.PostScript)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 footerlength_;
  int compression_;
  ::google::protobuf::uint64 compressionblocksize_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > version_;
  mutable int _version_cached_byte_size_;
  ::google::protobuf::uint64 metadatalength_;
  ::google::protobuf::uint32 writerversion_;
  ::std::string* magic_;
  static const ::std::string _default_magic_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PostScript* default_instance_;
};
// -------------------------------------------------------------------

class FileTail : public ::google::protobuf::Message {
 public:
  FileTail();
  virtual ~FileTail();
  
  FileTail(const FileTail& from);
  
  inline FileTail& operator=(const FileTail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileTail& default_instance();
  
  void Swap(FileTail* other);
  
  // implements Message ----------------------------------------------
  
  FileTail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileTail& from);
  void MergeFrom(const FileTail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .orc.proto.PostScript postscript = 1;
  inline bool has_postscript() const;
  inline void clear_postscript();
  static const int kPostscriptFieldNumber = 1;
  inline const ::orc::proto::PostScript& postscript() const;
  inline ::orc::proto::PostScript* mutable_postscript();
  
  // optional .orc.proto.Footer footer = 2;
  inline bool has_footer() const;
  inline void clear_footer();
  static const int kFooterFieldNumber = 2;
  inline const ::orc::proto::Footer& footer() const;
  inline ::orc::proto::Footer* mutable_footer();
  
  // optional uint64 fileLength = 3;
  inline bool has_filelength() const;
  inline void clear_filelength();
  static const int kFileLengthFieldNumber = 3;
  inline ::google::protobuf::uint64 filelength() const;
  inline void set_filelength(::google::protobuf::uint64 value);
  
  // optional uint64 postscriptLength = 4;
  inline bool has_postscriptlength() const;
  inline void clear_postscriptlength();
  static const int kPostscriptLengthFieldNumber = 4;
  inline ::google::protobuf::uint64 postscriptlength() const;
  inline void set_postscriptlength(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:orc.proto.FileTail)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::orc::proto::PostScript* postscript_;
  ::orc::proto::Footer* footer_;
  ::google::protobuf::uint64 filelength_;
  ::google::protobuf::uint64 postscriptlength_;
  friend void  protobuf_AddDesc_orc_5fproto_2eproto();
  friend void protobuf_AssignDesc_orc_5fproto_2eproto();
  friend void protobuf_ShutdownFile_orc_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FileTail* default_instance_;
};
// ===================================================================


// ===================================================================

// IntegerStatistics

// optional sint64 minimum = 1;
inline bool IntegerStatistics::has_minimum() const {
  return _has_bit(0);
}
inline void IntegerStatistics::clear_minimum() {
  minimum_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 IntegerStatistics::minimum() const {
  return minimum_;
}
inline void IntegerStatistics::set_minimum(::google::protobuf::int64 value) {
  _set_bit(0);
  minimum_ = value;
}

// optional sint64 maximum = 2;
inline bool IntegerStatistics::has_maximum() const {
  return _has_bit(1);
}
inline void IntegerStatistics::clear_maximum() {
  maximum_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 IntegerStatistics::maximum() const {
  return maximum_;
}
inline void IntegerStatistics::set_maximum(::google::protobuf::int64 value) {
  _set_bit(1);
  maximum_ = value;
}

// optional sint64 sum = 3;
inline bool IntegerStatistics::has_sum() const {
  return _has_bit(2);
}
inline void IntegerStatistics::clear_sum() {
  sum_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 IntegerStatistics::sum() const {
  return sum_;
}
inline void IntegerStatistics::set_sum(::google::protobuf::int64 value) {
  _set_bit(2);
  sum_ = value;
}

// -------------------------------------------------------------------

// DoubleStatistics

// optional double minimum = 1;
inline bool DoubleStatistics::has_minimum() const {
  return _has_bit(0);
}
inline void DoubleStatistics::clear_minimum() {
  minimum_ = 0;
  _clear_bit(0);
}
inline double DoubleStatistics::minimum() const {
  return minimum_;
}
inline void DoubleStatistics::set_minimum(double value) {
  _set_bit(0);
  minimum_ = value;
}

// optional double maximum = 2;
inline bool DoubleStatistics::has_maximum() const {
  return _has_bit(1);
}
inline void DoubleStatistics::clear_maximum() {
  maximum_ = 0;
  _clear_bit(1);
}
inline double DoubleStatistics::maximum() const {
  return maximum_;
}
inline void DoubleStatistics::set_maximum(double value) {
  _set_bit(1);
  maximum_ = value;
}

// optional double sum = 3;
inline bool DoubleStatistics::has_sum() const {
  return _has_bit(2);
}
inline void DoubleStatistics::clear_sum() {
  sum_ = 0;
  _clear_bit(2);
}
inline double DoubleStatistics::sum() const {
  return sum_;
}
inline void DoubleStatistics::set_sum(double value) {
  _set_bit(2);
  sum_ = value;
}

// -------------------------------------------------------------------

// StringStatistics

// optional string minimum = 1;
inline bool StringStatistics::has_minimum() const {
  return _has_bit(0);
}
inline void StringStatistics::clear_minimum() {
  if (minimum_ != &_default_minimum_) {
    minimum_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& StringStatistics::minimum() const {
  return *minimum_;
}
inline void StringStatistics::set_minimum(const ::std::string& value) {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  minimum_->assign(value);
}
inline void StringStatistics::set_minimum(const char* value) {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  minimum_->assign(value);
}
inline void StringStatistics::set_minimum(const char* value, size_t size) {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  minimum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringStatistics::mutable_minimum() {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  return minimum_;
}

// optional string maximum = 2;
inline bool StringStatistics::has_maximum() const {
  return _has_bit(1);
}
inline void StringStatistics::clear_maximum() {
  if (maximum_ != &_default_maximum_) {
    maximum_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& StringStatistics::maximum() const {
  return *maximum_;
}
inline void StringStatistics::set_maximum(const ::std::string& value) {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  maximum_->assign(value);
}
inline void StringStatistics::set_maximum(const char* value) {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  maximum_->assign(value);
}
inline void StringStatistics::set_maximum(const char* value, size_t size) {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  maximum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringStatistics::mutable_maximum() {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  return maximum_;
}

// optional sint64 sum = 3;
inline bool StringStatistics::has_sum() const {
  return _has_bit(2);
}
inline void StringStatistics::clear_sum() {
  sum_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 StringStatistics::sum() const {
  return sum_;
}
inline void StringStatistics::set_sum(::google::protobuf::int64 value) {
  _set_bit(2);
  sum_ = value;
}

// -------------------------------------------------------------------

// BucketStatistics

// repeated uint64 count = 1 [packed = true];
inline int BucketStatistics::count_size() const {
  return count_.size();
}
inline void BucketStatistics::clear_count() {
  count_.Clear();
}
inline ::google::protobuf::uint64 BucketStatistics::count(int index) const {
  return count_.Get(index);
}
inline void BucketStatistics::set_count(int index, ::google::protobuf::uint64 value) {
  count_.Set(index, value);
}
inline void BucketStatistics::add_count(::google::protobuf::uint64 value) {
  count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BucketStatistics::count() const {
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BucketStatistics::mutable_count() {
  return &count_;
}

// -------------------------------------------------------------------

// DecimalStatistics

// optional string minimum = 1;
inline bool DecimalStatistics::has_minimum() const {
  return _has_bit(0);
}
inline void DecimalStatistics::clear_minimum() {
  if (minimum_ != &_default_minimum_) {
    minimum_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DecimalStatistics::minimum() const {
  return *minimum_;
}
inline void DecimalStatistics::set_minimum(const ::std::string& value) {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  minimum_->assign(value);
}
inline void DecimalStatistics::set_minimum(const char* value) {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  minimum_->assign(value);
}
inline void DecimalStatistics::set_minimum(const char* value, size_t size) {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  minimum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DecimalStatistics::mutable_minimum() {
  _set_bit(0);
  if (minimum_ == &_default_minimum_) {
    minimum_ = new ::std::string;
  }
  return minimum_;
}

// optional string maximum = 2;
inline bool DecimalStatistics::has_maximum() const {
  return _has_bit(1);
}
inline void DecimalStatistics::clear_maximum() {
  if (maximum_ != &_default_maximum_) {
    maximum_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DecimalStatistics::maximum() const {
  return *maximum_;
}
inline void DecimalStatistics::set_maximum(const ::std::string& value) {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  maximum_->assign(value);
}
inline void DecimalStatistics::set_maximum(const char* value) {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  maximum_->assign(value);
}
inline void DecimalStatistics::set_maximum(const char* value, size_t size) {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  maximum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DecimalStatistics::mutable_maximum() {
  _set_bit(1);
  if (maximum_ == &_default_maximum_) {
    maximum_ = new ::std::string;
  }
  return maximum_;
}

// optional string sum = 3;
inline bool DecimalStatistics::has_sum() const {
  return _has_bit(2);
}
inline void DecimalStatistics::clear_sum() {
  if (sum_ != &_default_sum_) {
    sum_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DecimalStatistics::sum() const {
  return *sum_;
}
inline void DecimalStatistics::set_sum(const ::std::string& value) {
  _set_bit(2);
  if (sum_ == &_default_sum_) {
    sum_ = new ::std::string;
  }
  sum_->assign(value);
}
inline void DecimalStatistics::set_sum(const char* value) {
  _set_bit(2);
  if (sum_ == &_default_sum_) {
    sum_ = new ::std::string;
  }
  sum_->assign(value);
}
inline void DecimalStatistics::set_sum(const char* value, size_t size) {
  _set_bit(2);
  if (sum_ == &_default_sum_) {
    sum_ = new ::std::string;
  }
  sum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DecimalStatistics::mutable_sum() {
  _set_bit(2);
  if (sum_ == &_default_sum_) {
    sum_ = new ::std::string;
  }
  return sum_;
}

// -------------------------------------------------------------------

// DateStatistics

// optional sint32 minimum = 1;
inline bool DateStatistics::has_minimum() const {
  return _has_bit(0);
}
inline void DateStatistics::clear_minimum() {
  minimum_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DateStatistics::minimum() const {
  return minimum_;
}
inline void DateStatistics::set_minimum(::google::protobuf::int32 value) {
  _set_bit(0);
  minimum_ = value;
}

// optional sint32 maximum = 2;
inline bool DateStatistics::has_maximum() const {
  return _has_bit(1);
}
inline void DateStatistics::clear_maximum() {
  maximum_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DateStatistics::maximum() const {
  return maximum_;
}
inline void DateStatistics::set_maximum(::google::protobuf::int32 value) {
  _set_bit(1);
  maximum_ = value;
}

// -------------------------------------------------------------------

// TimestampStatistics

// optional sint64 minimum = 1;
inline bool TimestampStatistics::has_minimum() const {
  return _has_bit(0);
}
inline void TimestampStatistics::clear_minimum() {
  minimum_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 TimestampStatistics::minimum() const {
  return minimum_;
}
inline void TimestampStatistics::set_minimum(::google::protobuf::int64 value) {
  _set_bit(0);
  minimum_ = value;
}

// optional sint64 maximum = 2;
inline bool TimestampStatistics::has_maximum() const {
  return _has_bit(1);
}
inline void TimestampStatistics::clear_maximum() {
  maximum_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 TimestampStatistics::maximum() const {
  return maximum_;
}
inline void TimestampStatistics::set_maximum(::google::protobuf::int64 value) {
  _set_bit(1);
  maximum_ = value;
}

// -------------------------------------------------------------------

// BinaryStatistics

// optional sint64 sum = 1;
inline bool BinaryStatistics::has_sum() const {
  return _has_bit(0);
}
inline void BinaryStatistics::clear_sum() {
  sum_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 BinaryStatistics::sum() const {
  return sum_;
}
inline void BinaryStatistics::set_sum(::google::protobuf::int64 value) {
  _set_bit(0);
  sum_ = value;
}

// -------------------------------------------------------------------

// ColumnStatistics

// optional uint64 numberOfValues = 1;
inline bool ColumnStatistics::has_numberofvalues() const {
  return _has_bit(0);
}
inline void ColumnStatistics::clear_numberofvalues() {
  numberofvalues_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 ColumnStatistics::numberofvalues() const {
  return numberofvalues_;
}
inline void ColumnStatistics::set_numberofvalues(::google::protobuf::uint64 value) {
  _set_bit(0);
  numberofvalues_ = value;
}

// optional .orc.proto.IntegerStatistics intStatistics = 2;
inline bool ColumnStatistics::has_intstatistics() const {
  return _has_bit(1);
}
inline void ColumnStatistics::clear_intstatistics() {
  if (intstatistics_ != NULL) intstatistics_->::orc::proto::IntegerStatistics::Clear();
  _clear_bit(1);
}
inline const ::orc::proto::IntegerStatistics& ColumnStatistics::intstatistics() const {
  return intstatistics_ != NULL ? *intstatistics_ : *default_instance_->intstatistics_;
}
inline ::orc::proto::IntegerStatistics* ColumnStatistics::mutable_intstatistics() {
  _set_bit(1);
  if (intstatistics_ == NULL) intstatistics_ = new ::orc::proto::IntegerStatistics;
  return intstatistics_;
}

// optional .orc.proto.DoubleStatistics doubleStatistics = 3;
inline bool ColumnStatistics::has_doublestatistics() const {
  return _has_bit(2);
}
inline void ColumnStatistics::clear_doublestatistics() {
  if (doublestatistics_ != NULL) doublestatistics_->::orc::proto::DoubleStatistics::Clear();
  _clear_bit(2);
}
inline const ::orc::proto::DoubleStatistics& ColumnStatistics::doublestatistics() const {
  return doublestatistics_ != NULL ? *doublestatistics_ : *default_instance_->doublestatistics_;
}
inline ::orc::proto::DoubleStatistics* ColumnStatistics::mutable_doublestatistics() {
  _set_bit(2);
  if (doublestatistics_ == NULL) doublestatistics_ = new ::orc::proto::DoubleStatistics;
  return doublestatistics_;
}

// optional .orc.proto.StringStatistics stringStatistics = 4;
inline bool ColumnStatistics::has_stringstatistics() const {
  return _has_bit(3);
}
inline void ColumnStatistics::clear_stringstatistics() {
  if (stringstatistics_ != NULL) stringstatistics_->::orc::proto::StringStatistics::Clear();
  _clear_bit(3);
}
inline const ::orc::proto::StringStatistics& ColumnStatistics::stringstatistics() const {
  return stringstatistics_ != NULL ? *stringstatistics_ : *default_instance_->stringstatistics_;
}
inline ::orc::proto::StringStatistics* ColumnStatistics::mutable_stringstatistics() {
  _set_bit(3);
  if (stringstatistics_ == NULL) stringstatistics_ = new ::orc::proto::StringStatistics;
  return stringstatistics_;
}

// optional .orc.proto.BucketStatistics bucketStatistics = 5;
inline bool ColumnStatistics::has_bucketstatistics() const {
  return _has_bit(4);
}
inline void ColumnStatistics::clear_bucketstatistics() {
  if (bucketstatistics_ != NULL) bucketstatistics_->::orc::proto::BucketStatistics::Clear();
  _clear_bit(4);
}
inline const ::orc::proto::BucketStatistics& ColumnStatistics::bucketstatistics() const {
  return bucketstatistics_ != NULL ? *bucketstatistics_ : *default_instance_->bucketstatistics_;
}
inline ::orc::proto::BucketStatistics* ColumnStatistics::mutable_bucketstatistics() {
  _set_bit(4);
  if (bucketstatistics_ == NULL) bucketstatistics_ = new ::orc::proto::BucketStatistics;
  return bucketstatistics_;
}

// optional .orc.proto.DecimalStatistics decimalStatistics = 6;
inline bool ColumnStatistics::has_decimalstatistics() const {
  return _has_bit(5);
}
inline void ColumnStatistics::clear_decimalstatistics() {
  if (decimalstatistics_ != NULL) decimalstatistics_->::orc::proto::DecimalStatistics::Clear();
  _clear_bit(5);
}
inline const ::orc::proto::DecimalStatistics& ColumnStatistics::decimalstatistics() const {
  return decimalstatistics_ != NULL ? *decimalstatistics_ : *default_instance_->decimalstatistics_;
}
inline ::orc::proto::DecimalStatistics* ColumnStatistics::mutable_decimalstatistics() {
  _set_bit(5);
  if (decimalstatistics_ == NULL) decimalstatistics_ = new ::orc::proto::DecimalStatistics;
  return decimalstatistics_;
}

// optional .orc.proto.DateStatistics dateStatistics = 7;
inline bool ColumnStatistics::has_datestatistics() const {
  return _has_bit(6);
}
inline void ColumnStatistics::clear_datestatistics() {
  if (datestatistics_ != NULL) datestatistics_->::orc::proto::DateStatistics::Clear();
  _clear_bit(6);
}
inline const ::orc::proto::DateStatistics& ColumnStatistics::datestatistics() const {
  return datestatistics_ != NULL ? *datestatistics_ : *default_instance_->datestatistics_;
}
inline ::orc::proto::DateStatistics* ColumnStatistics::mutable_datestatistics() {
  _set_bit(6);
  if (datestatistics_ == NULL) datestatistics_ = new ::orc::proto::DateStatistics;
  return datestatistics_;
}

// optional .orc.proto.BinaryStatistics binaryStatistics = 8;
inline bool ColumnStatistics::has_binarystatistics() const {
  return _has_bit(7);
}
inline void ColumnStatistics::clear_binarystatistics() {
  if (binarystatistics_ != NULL) binarystatistics_->::orc::proto::BinaryStatistics::Clear();
  _clear_bit(7);
}
inline const ::orc::proto::BinaryStatistics& ColumnStatistics::binarystatistics() const {
  return binarystatistics_ != NULL ? *binarystatistics_ : *default_instance_->binarystatistics_;
}
inline ::orc::proto::BinaryStatistics* ColumnStatistics::mutable_binarystatistics() {
  _set_bit(7);
  if (binarystatistics_ == NULL) binarystatistics_ = new ::orc::proto::BinaryStatistics;
  return binarystatistics_;
}

// optional .orc.proto.TimestampStatistics timestampStatistics = 9;
inline bool ColumnStatistics::has_timestampstatistics() const {
  return _has_bit(8);
}
inline void ColumnStatistics::clear_timestampstatistics() {
  if (timestampstatistics_ != NULL) timestampstatistics_->::orc::proto::TimestampStatistics::Clear();
  _clear_bit(8);
}
inline const ::orc::proto::TimestampStatistics& ColumnStatistics::timestampstatistics() const {
  return timestampstatistics_ != NULL ? *timestampstatistics_ : *default_instance_->timestampstatistics_;
}
inline ::orc::proto::TimestampStatistics* ColumnStatistics::mutable_timestampstatistics() {
  _set_bit(8);
  if (timestampstatistics_ == NULL) timestampstatistics_ = new ::orc::proto::TimestampStatistics;
  return timestampstatistics_;
}

// optional bool hasNull = 10;
inline bool ColumnStatistics::has_hasnull() const {
  return _has_bit(9);
}
inline void ColumnStatistics::clear_hasnull() {
  hasnull_ = false;
  _clear_bit(9);
}
inline bool ColumnStatistics::hasnull() const {
  return hasnull_;
}
inline void ColumnStatistics::set_hasnull(bool value) {
  _set_bit(9);
  hasnull_ = value;
}

// -------------------------------------------------------------------

// RowIndexEntry

// repeated uint64 positions = 1 [packed = true];
inline int RowIndexEntry::positions_size() const {
  return positions_.size();
}
inline void RowIndexEntry::clear_positions() {
  positions_.Clear();
}
inline ::google::protobuf::uint64 RowIndexEntry::positions(int index) const {
  return positions_.Get(index);
}
inline void RowIndexEntry::set_positions(int index, ::google::protobuf::uint64 value) {
  positions_.Set(index, value);
}
inline void RowIndexEntry::add_positions(::google::protobuf::uint64 value) {
  positions_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RowIndexEntry::positions() const {
  return positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RowIndexEntry::mutable_positions() {
  return &positions_;
}

// optional .orc.proto.ColumnStatistics statistics = 2;
inline bool RowIndexEntry::has_statistics() const {
  return _has_bit(1);
}
inline void RowIndexEntry::clear_statistics() {
  if (statistics_ != NULL) statistics_->::orc::proto::ColumnStatistics::Clear();
  _clear_bit(1);
}
inline const ::orc::proto::ColumnStatistics& RowIndexEntry::statistics() const {
  return statistics_ != NULL ? *statistics_ : *default_instance_->statistics_;
}
inline ::orc::proto::ColumnStatistics* RowIndexEntry::mutable_statistics() {
  _set_bit(1);
  if (statistics_ == NULL) statistics_ = new ::orc::proto::ColumnStatistics;
  return statistics_;
}

// -------------------------------------------------------------------

// RowIndex

// repeated .orc.proto.RowIndexEntry entry = 1;
inline int RowIndex::entry_size() const {
  return entry_.size();
}
inline void RowIndex::clear_entry() {
  entry_.Clear();
}
inline const ::orc::proto::RowIndexEntry& RowIndex::entry(int index) const {
  return entry_.Get(index);
}
inline ::orc::proto::RowIndexEntry* RowIndex::mutable_entry(int index) {
  return entry_.Mutable(index);
}
inline ::orc::proto::RowIndexEntry* RowIndex::add_entry() {
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry >&
RowIndex::entry() const {
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry >*
RowIndex::mutable_entry() {
  return &entry_;
}

// -------------------------------------------------------------------

// BloomFilter

// optional uint32 numHashFunctions = 1;
inline bool BloomFilter::has_numhashfunctions() const {
  return _has_bit(0);
}
inline void BloomFilter::clear_numhashfunctions() {
  numhashfunctions_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 BloomFilter::numhashfunctions() const {
  return numhashfunctions_;
}
inline void BloomFilter::set_numhashfunctions(::google::protobuf::uint32 value) {
  _set_bit(0);
  numhashfunctions_ = value;
}

// repeated fixed64 bitset = 2;
inline int BloomFilter::bitset_size() const {
  return bitset_.size();
}
inline void BloomFilter::clear_bitset() {
  bitset_.Clear();
}
inline ::google::protobuf::uint64 BloomFilter::bitset(int index) const {
  return bitset_.Get(index);
}
inline void BloomFilter::set_bitset(int index, ::google::protobuf::uint64 value) {
  bitset_.Set(index, value);
}
inline void BloomFilter::add_bitset(::google::protobuf::uint64 value) {
  bitset_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BloomFilter::bitset() const {
  return bitset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BloomFilter::mutable_bitset() {
  return &bitset_;
}

// -------------------------------------------------------------------

// BloomFilterIndex

// repeated .orc.proto.BloomFilter bloomFilter = 1;
inline int BloomFilterIndex::bloomfilter_size() const {
  return bloomfilter_.size();
}
inline void BloomFilterIndex::clear_bloomfilter() {
  bloomfilter_.Clear();
}
inline const ::orc::proto::BloomFilter& BloomFilterIndex::bloomfilter(int index) const {
  return bloomfilter_.Get(index);
}
inline ::orc::proto::BloomFilter* BloomFilterIndex::mutable_bloomfilter(int index) {
  return bloomfilter_.Mutable(index);
}
inline ::orc::proto::BloomFilter* BloomFilterIndex::add_bloomfilter() {
  return bloomfilter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter >&
BloomFilterIndex::bloomfilter() const {
  return bloomfilter_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter >*
BloomFilterIndex::mutable_bloomfilter() {
  return &bloomfilter_;
}

// -------------------------------------------------------------------

// Stream

// optional .orc.proto.Stream.Kind kind = 1;
inline bool Stream::has_kind() const {
  return _has_bit(0);
}
inline void Stream::clear_kind() {
  kind_ = 0;
  _clear_bit(0);
}
inline ::orc::proto::Stream_Kind Stream::kind() const {
  return static_cast< ::orc::proto::Stream_Kind >(kind_);
}
inline void Stream::set_kind(::orc::proto::Stream_Kind value) {
  GOOGLE_DCHECK(::orc::proto::Stream_Kind_IsValid(value));
  _set_bit(0);
  kind_ = value;
}

// optional uint32 column = 2;
inline bool Stream::has_column() const {
  return _has_bit(1);
}
inline void Stream::clear_column() {
  column_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 Stream::column() const {
  return column_;
}
inline void Stream::set_column(::google::protobuf::uint32 value) {
  _set_bit(1);
  column_ = value;
}

// optional uint64 length = 3;
inline bool Stream::has_length() const {
  return _has_bit(2);
}
inline void Stream::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 Stream::length() const {
  return length_;
}
inline void Stream::set_length(::google::protobuf::uint64 value) {
  _set_bit(2);
  length_ = value;
}

// -------------------------------------------------------------------

// ColumnEncoding

// optional .orc.proto.ColumnEncoding.Kind kind = 1;
inline bool ColumnEncoding::has_kind() const {
  return _has_bit(0);
}
inline void ColumnEncoding::clear_kind() {
  kind_ = 0;
  _clear_bit(0);
}
inline ::orc::proto::ColumnEncoding_Kind ColumnEncoding::kind() const {
  return static_cast< ::orc::proto::ColumnEncoding_Kind >(kind_);
}
inline void ColumnEncoding::set_kind(::orc::proto::ColumnEncoding_Kind value) {
  GOOGLE_DCHECK(::orc::proto::ColumnEncoding_Kind_IsValid(value));
  _set_bit(0);
  kind_ = value;
}

// optional uint32 dictionarySize = 2;
inline bool ColumnEncoding::has_dictionarysize() const {
  return _has_bit(1);
}
inline void ColumnEncoding::clear_dictionarysize() {
  dictionarysize_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ColumnEncoding::dictionarysize() const {
  return dictionarysize_;
}
inline void ColumnEncoding::set_dictionarysize(::google::protobuf::uint32 value) {
  _set_bit(1);
  dictionarysize_ = value;
}

// -------------------------------------------------------------------

// StripeFooter

// repeated .orc.proto.Stream streams = 1;
inline int StripeFooter::streams_size() const {
  return streams_.size();
}
inline void StripeFooter::clear_streams() {
  streams_.Clear();
}
inline const ::orc::proto::Stream& StripeFooter::streams(int index) const {
  return streams_.Get(index);
}
inline ::orc::proto::Stream* StripeFooter::mutable_streams(int index) {
  return streams_.Mutable(index);
}
inline ::orc::proto::Stream* StripeFooter::add_streams() {
  return streams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::Stream >&
StripeFooter::streams() const {
  return streams_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::Stream >*
StripeFooter::mutable_streams() {
  return &streams_;
}

// repeated .orc.proto.ColumnEncoding columns = 2;
inline int StripeFooter::columns_size() const {
  return columns_.size();
}
inline void StripeFooter::clear_columns() {
  columns_.Clear();
}
inline const ::orc::proto::ColumnEncoding& StripeFooter::columns(int index) const {
  return columns_.Get(index);
}
inline ::orc::proto::ColumnEncoding* StripeFooter::mutable_columns(int index) {
  return columns_.Mutable(index);
}
inline ::orc::proto::ColumnEncoding* StripeFooter::add_columns() {
  return columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding >&
StripeFooter::columns() const {
  return columns_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding >*
StripeFooter::mutable_columns() {
  return &columns_;
}

// optional string writerTimezone = 3;
inline bool StripeFooter::has_writertimezone() const {
  return _has_bit(2);
}
inline void StripeFooter::clear_writertimezone() {
  if (writertimezone_ != &_default_writertimezone_) {
    writertimezone_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& StripeFooter::writertimezone() const {
  return *writertimezone_;
}
inline void StripeFooter::set_writertimezone(const ::std::string& value) {
  _set_bit(2);
  if (writertimezone_ == &_default_writertimezone_) {
    writertimezone_ = new ::std::string;
  }
  writertimezone_->assign(value);
}
inline void StripeFooter::set_writertimezone(const char* value) {
  _set_bit(2);
  if (writertimezone_ == &_default_writertimezone_) {
    writertimezone_ = new ::std::string;
  }
  writertimezone_->assign(value);
}
inline void StripeFooter::set_writertimezone(const char* value, size_t size) {
  _set_bit(2);
  if (writertimezone_ == &_default_writertimezone_) {
    writertimezone_ = new ::std::string;
  }
  writertimezone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StripeFooter::mutable_writertimezone() {
  _set_bit(2);
  if (writertimezone_ == &_default_writertimezone_) {
    writertimezone_ = new ::std::string;
  }
  return writertimezone_;
}

// -------------------------------------------------------------------

// Type

// optional .orc.proto.Type.Kind kind = 1;
inline bool Type::has_kind() const {
  return _has_bit(0);
}
inline void Type::clear_kind() {
  kind_ = 0;
  _clear_bit(0);
}
inline ::orc::proto::Type_Kind Type::kind() const {
  return static_cast< ::orc::proto::Type_Kind >(kind_);
}
inline void Type::set_kind(::orc::proto::Type_Kind value) {
  GOOGLE_DCHECK(::orc::proto::Type_Kind_IsValid(value));
  _set_bit(0);
  kind_ = value;
}

// repeated uint32 subtypes = 2 [packed = true];
inline int Type::subtypes_size() const {
  return subtypes_.size();
}
inline void Type::clear_subtypes() {
  subtypes_.Clear();
}
inline ::google::protobuf::uint32 Type::subtypes(int index) const {
  return subtypes_.Get(index);
}
inline void Type::set_subtypes(int index, ::google::protobuf::uint32 value) {
  subtypes_.Set(index, value);
}
inline void Type::add_subtypes(::google::protobuf::uint32 value) {
  subtypes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Type::subtypes() const {
  return subtypes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Type::mutable_subtypes() {
  return &subtypes_;
}

// repeated string fieldNames = 3;
inline int Type::fieldnames_size() const {
  return fieldnames_.size();
}
inline void Type::clear_fieldnames() {
  fieldnames_.Clear();
}
inline const ::std::string& Type::fieldnames(int index) const {
  return fieldnames_.Get(index);
}
inline ::std::string* Type::mutable_fieldnames(int index) {
  return fieldnames_.Mutable(index);
}
inline void Type::set_fieldnames(int index, const ::std::string& value) {
  fieldnames_.Mutable(index)->assign(value);
}
inline void Type::set_fieldnames(int index, const char* value) {
  fieldnames_.Mutable(index)->assign(value);
}
inline void Type::set_fieldnames(int index, const char* value, size_t size) {
  fieldnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Type::add_fieldnames() {
  return fieldnames_.Add();
}
inline void Type::add_fieldnames(const ::std::string& value) {
  fieldnames_.Add()->assign(value);
}
inline void Type::add_fieldnames(const char* value) {
  fieldnames_.Add()->assign(value);
}
inline void Type::add_fieldnames(const char* value, size_t size) {
  fieldnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Type::fieldnames() const {
  return fieldnames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Type::mutable_fieldnames() {
  return &fieldnames_;
}

// optional uint32 maximumLength = 4;
inline bool Type::has_maximumlength() const {
  return _has_bit(3);
}
inline void Type::clear_maximumlength() {
  maximumlength_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 Type::maximumlength() const {
  return maximumlength_;
}
inline void Type::set_maximumlength(::google::protobuf::uint32 value) {
  _set_bit(3);
  maximumlength_ = value;
}

// optional uint32 precision = 5;
inline bool Type::has_precision() const {
  return _has_bit(4);
}
inline void Type::clear_precision() {
  precision_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 Type::precision() const {
  return precision_;
}
inline void Type::set_precision(::google::protobuf::uint32 value) {
  _set_bit(4);
  precision_ = value;
}

// optional uint32 scale = 6;
inline bool Type::has_scale() const {
  return _has_bit(5);
}
inline void Type::clear_scale() {
  scale_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 Type::scale() const {
  return scale_;
}
inline void Type::set_scale(::google::protobuf::uint32 value) {
  _set_bit(5);
  scale_ = value;
}

// -------------------------------------------------------------------

// StripeInformation

// optional uint64 offset = 1;
inline bool StripeInformation::has_offset() const {
  return _has_bit(0);
}
inline void StripeInformation::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 StripeInformation::offset() const {
  return offset_;
}
inline void StripeInformation::set_offset(::google::protobuf::uint64 value) {
  _set_bit(0);
  offset_ = value;
}

// optional uint64 indexLength = 2;
inline bool StripeInformation::has_indexlength() const {
  return _has_bit(1);
}
inline void StripeInformation::clear_indexlength() {
  indexlength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 StripeInformation::indexlength() const {
  return indexlength_;
}
inline void StripeInformation::set_indexlength(::google::protobuf::uint64 value) {
  _set_bit(1);
  indexlength_ = value;
}

// optional uint64 dataLength = 3;
inline bool StripeInformation::has_datalength() const {
  return _has_bit(2);
}
inline void StripeInformation::clear_datalength() {
  datalength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 StripeInformation::datalength() const {
  return datalength_;
}
inline void StripeInformation::set_datalength(::google::protobuf::uint64 value) {
  _set_bit(2);
  datalength_ = value;
}

// optional uint64 footerLength = 4;
inline bool StripeInformation::has_footerlength() const {
  return _has_bit(3);
}
inline void StripeInformation::clear_footerlength() {
  footerlength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 StripeInformation::footerlength() const {
  return footerlength_;
}
inline void StripeInformation::set_footerlength(::google::protobuf::uint64 value) {
  _set_bit(3);
  footerlength_ = value;
}

// optional uint64 numberOfRows = 5;
inline bool StripeInformation::has_numberofrows() const {
  return _has_bit(4);
}
inline void StripeInformation::clear_numberofrows() {
  numberofrows_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 StripeInformation::numberofrows() const {
  return numberofrows_;
}
inline void StripeInformation::set_numberofrows(::google::protobuf::uint64 value) {
  _set_bit(4);
  numberofrows_ = value;
}

// -------------------------------------------------------------------

// UserMetadataItem

// optional string name = 1;
inline bool UserMetadataItem::has_name() const {
  return _has_bit(0);
}
inline void UserMetadataItem::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& UserMetadataItem::name() const {
  return *name_;
}
inline void UserMetadataItem::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void UserMetadataItem::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void UserMetadataItem::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserMetadataItem::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional bytes value = 2;
inline bool UserMetadataItem::has_value() const {
  return _has_bit(1);
}
inline void UserMetadataItem::clear_value() {
  if (value_ != &_default_value_) {
    value_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& UserMetadataItem::value() const {
  return *value_;
}
inline void UserMetadataItem::set_value(const ::std::string& value) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void UserMetadataItem::set_value(const char* value) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void UserMetadataItem::set_value(const void* value, size_t size) {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserMetadataItem::mutable_value() {
  _set_bit(1);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  return value_;
}

// -------------------------------------------------------------------

// StripeStatistics

// repeated .orc.proto.ColumnStatistics colStats = 1;
inline int StripeStatistics::colstats_size() const {
  return colstats_.size();
}
inline void StripeStatistics::clear_colstats() {
  colstats_.Clear();
}
inline const ::orc::proto::ColumnStatistics& StripeStatistics::colstats(int index) const {
  return colstats_.Get(index);
}
inline ::orc::proto::ColumnStatistics* StripeStatistics::mutable_colstats(int index) {
  return colstats_.Mutable(index);
}
inline ::orc::proto::ColumnStatistics* StripeStatistics::add_colstats() {
  return colstats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >&
StripeStatistics::colstats() const {
  return colstats_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >*
StripeStatistics::mutable_colstats() {
  return &colstats_;
}

// -------------------------------------------------------------------

// Metadata

// repeated .orc.proto.StripeStatistics stripeStats = 1;
inline int Metadata::stripestats_size() const {
  return stripestats_.size();
}
inline void Metadata::clear_stripestats() {
  stripestats_.Clear();
}
inline const ::orc::proto::StripeStatistics& Metadata::stripestats(int index) const {
  return stripestats_.Get(index);
}
inline ::orc::proto::StripeStatistics* Metadata::mutable_stripestats(int index) {
  return stripestats_.Mutable(index);
}
inline ::orc::proto::StripeStatistics* Metadata::add_stripestats() {
  return stripestats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics >&
Metadata::stripestats() const {
  return stripestats_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics >*
Metadata::mutable_stripestats() {
  return &stripestats_;
}

// -------------------------------------------------------------------

// Footer

// optional uint64 headerLength = 1;
inline bool Footer::has_headerlength() const {
  return _has_bit(0);
}
inline void Footer::clear_headerlength() {
  headerlength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 Footer::headerlength() const {
  return headerlength_;
}
inline void Footer::set_headerlength(::google::protobuf::uint64 value) {
  _set_bit(0);
  headerlength_ = value;
}

// optional uint64 contentLength = 2;
inline bool Footer::has_contentlength() const {
  return _has_bit(1);
}
inline void Footer::clear_contentlength() {
  contentlength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 Footer::contentlength() const {
  return contentlength_;
}
inline void Footer::set_contentlength(::google::protobuf::uint64 value) {
  _set_bit(1);
  contentlength_ = value;
}

// repeated .orc.proto.StripeInformation stripes = 3;
inline int Footer::stripes_size() const {
  return stripes_.size();
}
inline void Footer::clear_stripes() {
  stripes_.Clear();
}
inline const ::orc::proto::StripeInformation& Footer::stripes(int index) const {
  return stripes_.Get(index);
}
inline ::orc::proto::StripeInformation* Footer::mutable_stripes(int index) {
  return stripes_.Mutable(index);
}
inline ::orc::proto::StripeInformation* Footer::add_stripes() {
  return stripes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation >&
Footer::stripes() const {
  return stripes_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation >*
Footer::mutable_stripes() {
  return &stripes_;
}

// repeated .orc.proto.Type types = 4;
inline int Footer::types_size() const {
  return types_.size();
}
inline void Footer::clear_types() {
  types_.Clear();
}
inline const ::orc::proto::Type& Footer::types(int index) const {
  return types_.Get(index);
}
inline ::orc::proto::Type* Footer::mutable_types(int index) {
  return types_.Mutable(index);
}
inline ::orc::proto::Type* Footer::add_types() {
  return types_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::Type >&
Footer::types() const {
  return types_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::Type >*
Footer::mutable_types() {
  return &types_;
}

// repeated .orc.proto.UserMetadataItem metadata = 5;
inline int Footer::metadata_size() const {
  return metadata_.size();
}
inline void Footer::clear_metadata() {
  metadata_.Clear();
}
inline const ::orc::proto::UserMetadataItem& Footer::metadata(int index) const {
  return metadata_.Get(index);
}
inline ::orc::proto::UserMetadataItem* Footer::mutable_metadata(int index) {
  return metadata_.Mutable(index);
}
inline ::orc::proto::UserMetadataItem* Footer::add_metadata() {
  return metadata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem >&
Footer::metadata() const {
  return metadata_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem >*
Footer::mutable_metadata() {
  return &metadata_;
}

// optional uint64 numberOfRows = 6;
inline bool Footer::has_numberofrows() const {
  return _has_bit(5);
}
inline void Footer::clear_numberofrows() {
  numberofrows_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 Footer::numberofrows() const {
  return numberofrows_;
}
inline void Footer::set_numberofrows(::google::protobuf::uint64 value) {
  _set_bit(5);
  numberofrows_ = value;
}

// repeated .orc.proto.ColumnStatistics statistics = 7;
inline int Footer::statistics_size() const {
  return statistics_.size();
}
inline void Footer::clear_statistics() {
  statistics_.Clear();
}
inline const ::orc::proto::ColumnStatistics& Footer::statistics(int index) const {
  return statistics_.Get(index);
}
inline ::orc::proto::ColumnStatistics* Footer::mutable_statistics(int index) {
  return statistics_.Mutable(index);
}
inline ::orc::proto::ColumnStatistics* Footer::add_statistics() {
  return statistics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >&
Footer::statistics() const {
  return statistics_;
}
inline ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >*
Footer::mutable_statistics() {
  return &statistics_;
}

// optional uint32 rowIndexStride = 8;
inline bool Footer::has_rowindexstride() const {
  return _has_bit(7);
}
inline void Footer::clear_rowindexstride() {
  rowindexstride_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 Footer::rowindexstride() const {
  return rowindexstride_;
}
inline void Footer::set_rowindexstride(::google::protobuf::uint32 value) {
  _set_bit(7);
  rowindexstride_ = value;
}

// -------------------------------------------------------------------

// PostScript

// optional uint64 footerLength = 1;
inline bool PostScript::has_footerlength() const {
  return _has_bit(0);
}
inline void PostScript::clear_footerlength() {
  footerlength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 PostScript::footerlength() const {
  return footerlength_;
}
inline void PostScript::set_footerlength(::google::protobuf::uint64 value) {
  _set_bit(0);
  footerlength_ = value;
}

// optional .orc.proto.CompressionKind compression = 2;
inline bool PostScript::has_compression() const {
  return _has_bit(1);
}
inline void PostScript::clear_compression() {
  compression_ = 0;
  _clear_bit(1);
}
inline orc::proto::CompressionKind PostScript::compression() const {
  return static_cast< orc::proto::CompressionKind >(compression_);
}
inline void PostScript::set_compression(orc::proto::CompressionKind value) {
  GOOGLE_DCHECK(orc::proto::CompressionKind_IsValid(value));
  _set_bit(1);
  compression_ = value;
}

// optional uint64 compressionBlockSize = 3;
inline bool PostScript::has_compressionblocksize() const {
  return _has_bit(2);
}
inline void PostScript::clear_compressionblocksize() {
  compressionblocksize_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 PostScript::compressionblocksize() const {
  return compressionblocksize_;
}
inline void PostScript::set_compressionblocksize(::google::protobuf::uint64 value) {
  _set_bit(2);
  compressionblocksize_ = value;
}

// repeated uint32 version = 4 [packed = true];
inline int PostScript::version_size() const {
  return version_.size();
}
inline void PostScript::clear_version() {
  version_.Clear();
}
inline ::google::protobuf::uint32 PostScript::version(int index) const {
  return version_.Get(index);
}
inline void PostScript::set_version(int index, ::google::protobuf::uint32 value) {
  version_.Set(index, value);
}
inline void PostScript::add_version(::google::protobuf::uint32 value) {
  version_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PostScript::version() const {
  return version_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PostScript::mutable_version() {
  return &version_;
}

// optional uint64 metadataLength = 5;
inline bool PostScript::has_metadatalength() const {
  return _has_bit(4);
}
inline void PostScript::clear_metadatalength() {
  metadatalength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 PostScript::metadatalength() const {
  return metadatalength_;
}
inline void PostScript::set_metadatalength(::google::protobuf::uint64 value) {
  _set_bit(4);
  metadatalength_ = value;
}

// optional uint32 writerVersion = 6;
inline bool PostScript::has_writerversion() const {
  return _has_bit(5);
}
inline void PostScript::clear_writerversion() {
  writerversion_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PostScript::writerversion() const {
  return writerversion_;
}
inline void PostScript::set_writerversion(::google::protobuf::uint32 value) {
  _set_bit(5);
  writerversion_ = value;
}

// optional string magic = 8000;
inline bool PostScript::has_magic() const {
  return _has_bit(6);
}
inline void PostScript::clear_magic() {
  if (magic_ != &_default_magic_) {
    magic_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& PostScript::magic() const {
  return *magic_;
}
inline void PostScript::set_magic(const ::std::string& value) {
  _set_bit(6);
  if (magic_ == &_default_magic_) {
    magic_ = new ::std::string;
  }
  magic_->assign(value);
}
inline void PostScript::set_magic(const char* value) {
  _set_bit(6);
  if (magic_ == &_default_magic_) {
    magic_ = new ::std::string;
  }
  magic_->assign(value);
}
inline void PostScript::set_magic(const char* value, size_t size) {
  _set_bit(6);
  if (magic_ == &_default_magic_) {
    magic_ = new ::std::string;
  }
  magic_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PostScript::mutable_magic() {
  _set_bit(6);
  if (magic_ == &_default_magic_) {
    magic_ = new ::std::string;
  }
  return magic_;
}

// -------------------------------------------------------------------

// FileTail

// optional .orc.proto.PostScript postscript = 1;
inline bool FileTail::has_postscript() const {
  return _has_bit(0);
}
inline void FileTail::clear_postscript() {
  if (postscript_ != NULL) postscript_->::orc::proto::PostScript::Clear();
  _clear_bit(0);
}
inline const ::orc::proto::PostScript& FileTail::postscript() const {
  return postscript_ != NULL ? *postscript_ : *default_instance_->postscript_;
}
inline ::orc::proto::PostScript* FileTail::mutable_postscript() {
  _set_bit(0);
  if (postscript_ == NULL) postscript_ = new ::orc::proto::PostScript;
  return postscript_;
}

// optional .orc.proto.Footer footer = 2;
inline bool FileTail::has_footer() const {
  return _has_bit(1);
}
inline void FileTail::clear_footer() {
  if (footer_ != NULL) footer_->::orc::proto::Footer::Clear();
  _clear_bit(1);
}
inline const ::orc::proto::Footer& FileTail::footer() const {
  return footer_ != NULL ? *footer_ : *default_instance_->footer_;
}
inline ::orc::proto::Footer* FileTail::mutable_footer() {
  _set_bit(1);
  if (footer_ == NULL) footer_ = new ::orc::proto::Footer;
  return footer_;
}

// optional uint64 fileLength = 3;
inline bool FileTail::has_filelength() const {
  return _has_bit(2);
}
inline void FileTail::clear_filelength() {
  filelength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 FileTail::filelength() const {
  return filelength_;
}
inline void FileTail::set_filelength(::google::protobuf::uint64 value) {
  _set_bit(2);
  filelength_ = value;
}

// optional uint64 postscriptLength = 4;
inline bool FileTail::has_postscriptlength() const {
  return _has_bit(3);
}
inline void FileTail::clear_postscriptlength() {
  postscriptlength_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 FileTail::postscriptlength() const {
  return postscriptlength_;
}
inline void FileTail::set_postscriptlength(::google::protobuf::uint64 value) {
  _set_bit(3);
  postscriptlength_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace orc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::orc::proto::Stream_Kind>() {
  return ::orc::proto::Stream_Kind_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::orc::proto::ColumnEncoding_Kind>() {
  return ::orc::proto::ColumnEncoding_Kind_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::orc::proto::Type_Kind>() {
  return ::orc::proto::Type_Kind_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< orc::proto::CompressionKind>() {
  return orc::proto::CompressionKind_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_orc_5fproto_2eproto__INCLUDED
