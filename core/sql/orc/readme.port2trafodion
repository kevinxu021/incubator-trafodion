The following steps are necessary to generate ORC C++ library source code
for compialtion under Trafodion from a source Apache ORC ++ library. 
These steps have been coded in script genorc.sh available at core/sql/orc.

Assumptions

1. SOURCE is the source directory of the library, downloaded from ORC C++ 
website. For example it is <pathS>/orc-1.1.2. 
2. TARGET is the target directory that we store ORC source under Trafodion. 
For example, TARGET is <pathT>/traf_orc.

Steps:

0. create a link from SOURCE to ../SOURCE/orc
1. Copy SOURCE/c++/src to TARGET
2. Copy SOURCE/C++/include to TARGET
3. Copy and generate ORC proto .hh and .cc files
	3.1  copy SOURCE/proto/orc_proto.proto to TARGET/src/wrap
	3.2  cd TARGET/src/wrap
        3.3  protoc --cpp_out=. orc_proto.proto
	3.4  copy the proto wrap $SOURCE/c++/src/wrap/orc-proto-wrapper.cpp 
             to TARGET/src
4. Run the build steps for SOURCE 
	4.1 cd SOURCE/..
	4.2 copy TARGET/Makefile.forORC to SOURCE/..
	4.3 make -f Makefile.forORC all
5. Copy the generate config file in step 4 to TARGET
	5.1 copy SOURCE/build/c++/include/orc/orc-config.hh TARGET/include/orc
	5.1 copy SOURCE/build/c++/src/Adaptor.hh TARGET/include
6. Rename .cc to .cpp under TARGET/src


Once the above steps are succesfully performed, or script genorc.sh executed
OK, one needs to tailor the $TARGET as follows.

1. 
	1.1 cd to $TARGET/include/orc
	1.2 add three lines (20,21 and 22) to orc-config.hh to undefine _MSC_VER


 15 #ifndef ORC_CONFIG_HH
 16 #define ORC_CONFIG_HH
 17
 18 #define ORC_VERSION "1.1.2"
 19
 20 #ifdef _MSC_VER
 21 #undef _MSC_VER
 22 #endif
 23
 24 #define ORC_CXX_HAS_CSTDINT
 25 #define ORC_CXX_HAS_INITIALIZER_LIST

2. Merge method getSumStringLengths() method from Trafodion version in Read.cpp
to $TARGET/src/Read.cpp

3. Copy $MY_SQROOT/../sql/orc/src/HdfsOrcFile.cpp to $TARGET/src

$TARGET is ready to be compiled under Trafodion. It can for example be 
copied back to $MY_SQROOT/../sql/orc, if $SOUCE is a newer version than
1.1.2.
