>>
>>set schema hive.hive;

--- SQL operation complete.
>>set terminal_charset utf8;
>>
>>cqd AUTO_QUERY_RETRY 'OFF';

--- SQL operation complete.
>>cqd HIVE_MAX_STRING_LENGTH '32' ;

--- SQL operation complete.
>>cqd CALL_EMBEDDED_ARKCMP 'OFF';

--- SQL operation complete.
>>cqd HIST_ROWCOUNT_REQUIRING_STATS '50000';

--- SQL operation complete.
>>------------------------------------------------------------
>>-- Testing query plan invalidation in the compiler, but
>>-- not the executor. Perform DML/DDL operations on a
>>-- table and try re-executing the old plan as well as
>>-- getting a query cache hit and updating the changed
>>-- Hive and HDFS metadata
>>------------------------------------------------------------
>>
>>prepare s1 from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_temp
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

--- 0 row(s) selected.
>>-- expect 0 rows
>>
>>prepare s1part from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_p 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1part;

--- 0 row(s) selected.
>>-- expect 0 rows
>>
>>insert into hive.hive.hivenonp
+>values -- partition 1,one
+>       (1,1,1,'one', timestamp '2001-01-01 01:23:45.678901', date '2001-01-01'),
+>       (11,11,1,'one', timestamp '2001-01-01 01:23:45.678901', date '2001-01-01'),
+>       -- partition 2,two
+>       (2,2,2,'two', timestamp '2002-02-02 02:34:56.789012', date '2020-02-29'),
+>       (22,22,2,'two', timestamp '2002-02-02 00:00:00.000000', date '2020-02-29'),
+>       (222,222,2,'two', timestamp '2002-02-02 02:34:56.789012', date '2020-02-29'),
+>       -- partition 3,three
+>       (3,3,3,'three', timestamp '2003-03-03 03:45:57.890123', date '2003-03-31'),
+>       -- partition 3 or partition 3,four
+>       (34,34,3,'four', timestamp '2004-04-04 04:56:18', date '2004-04-04');

--- 7 row(s) inserted.
>>select * from hive.hive.hivenonp;

ID           COL2         P1           P2                                P1T                         P1D
-----------  -----------  -----------  --------------------------------  --------------------------  ----------

          1            1            1  one                               2001-01-01 01:23:45.678901  2001-01-01
         11           11            1  one                               2001-01-01 01:23:45.678901  2001-01-01
          2            2            2  two                               2002-02-02 02:34:56.789012  2020-02-29
         22           22            2  two                               2002-02-02 00:00:00.000000  2020-02-29
        222          222            2  two                               2002-02-02 02:34:56.789012  2020-02-29
          3            3            3  three                             2003-03-03 03:45:57.890123  2003-03-31
         34           34            3  four                              2004-04-04 04:56:18.000000  2004-04-04

--- 7 row(s) selected.
>>
>>insert into hive.hive.hivepis select id, col2, p1, p2 from hive.hive.hivenonp;

--- 7 row(s) inserted.
>>insert into hive.hive.hivepts select id, col2, p1t, p2 from hive.hive.hivenonp;

--- 7 row(s) inserted.
>>insert into hive.hive.hivepi  select id, col2, p1 from hive.hive.hivepis;

--- 7 row(s) inserted.
>>insert overwrite table hive.hive.hivepi  select id, col2, p1 from hive.hive.hivepis;

*** ERROR[4223] INSERT OVERWRITE TABLE into partitioned Hive tables is not supported in this software version.

*** ERROR[8822] The statement was not prepared.

>>-- error, insert overwrite table not allowed for partitioned tables
>>
>>prepare display_rows_accessed from
+>select val4_txt, val4
+>from table(statistics(null,null))
+>where tdb_name like '%_SCAN %';

--- SQL command prepared.
>>
>>select * from hivepi;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2
          1            1            1
         11           11            1
         34           34            3
          3            3            3

--- 7 row(s) selected.
>>select count(*) from hivepis;

(EXPR)              
--------------------

                   7

--- 1 row(s) selected.
>>select * from hivepts where p2 = 'two';

ID           COL2         P1T                         P2
-----------  -----------  --------------------------  --------------------------------

          2            2  2002-02-02 02:34:56.789012  two                             
        222          222  2002-02-02 02:34:56.789012  two                             
         22           22  2002-02-02 00:00:00.000000  two                             

--- 3 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         3

--- 1 row(s) selected.
>>select * from hivepi join hivepis on hivepi.p1 = hivepis.p1;

ID           COL2         P1           ID           COL2         P1           P2
-----------  -----------  -----------  -----------  -----------  -----------  --------------------------------

          2            2            2            2            2            2  two                             
        222          222            2            2            2            2  two                             
         22           22            2            2            2            2  two                             
          2            2            2           22           22            2  two                             
        222          222            2           22           22            2  two                             
         22           22            2           22           22            2  two                             
          2            2            2          222          222            2  two                             
        222          222            2          222          222            2  two                             
         22           22            2          222          222            2  two                             
          1            1            1            1            1            1  one                             
         11           11            1            1            1            1  one                             
          1            1            1           11           11            1  one                             
         11           11            1           11           11            1  one                             
         34           34            3           34           34            3  four                            
          3            3            3           34           34            3  four                            
         34           34            3            3            3            3  three                           
          3            3            3            3            3            3  three                           

--- 17 row(s) selected.
>>
>>-- min/max optimization, leading to partition elimination
>>cqd GEN_HSHJ_MIN_MAX_OPT 'on';

--- SQL operation complete.
>>control query shape hash_join(scan('P'), scan('N'));

--- SQL operation complete.
>>
>>prepare s from
+>select p.id, n.id, p.p1, n.p1
+>from hive.hive.hivepi p join hive.hive.hivenonp n
+>  on p.p1 = n.p1
+>where n.id in (2, 22);

--- SQL command prepared.
>>
>>-- validate that the min/max values are actually used
>>select operator, tname
+>from table(explain(null, 'S'))
+>where description like '%:_sys_MinVal0%'
+>  and description like '%:_sys_MaxVal0%';

OPERATOR                        TNAME
------------------------------  ------------------------------------------------------------

HIVE_SCAN                       P (HIVE.HIVE.HIVEPI)                                        
HYBRID_HASH_JOIN                                                                            

--- 2 row(s) selected.
>>
>>execute s;

ID           ID           P1           P1         
-----------  -----------  -----------  -----------

          2            2            2            2
          2           22            2            2
         22            2            2            2
         22           22            2            2
        222            2            2            2
        222           22            2            2

--- 6 row(s) selected.
>>
>>-- allow VEG between varchars
>>cqd comp_bool_158 'on';

--- SQL operation complete.
>>
>>prepare s from
+>select p.id, n.id, p.p1, n.p1, p.p2
+>from hive.hive.hivepis p join hive.hive.hivenonp n
+>  on p.p1 = n.p1 and p.p2 = n.p2
+>where n.id in (2, 22) and p.p2 like '%w%';

--- SQL command prepared.
>>
>>-- validate that the min/max values are actually used
>>select operator, tname
+>from table(explain(null, 'S'))
+>where description like '%:_sys_MinVal0%'
+>  and description like '%:_sys_MaxVal0%'
+>  and description like '%:_sys_MinVal1%'
+>  and description like '%:_sys_MaxVal1%';

OPERATOR                        TNAME
------------------------------  ------------------------------------------------------------

HIVE_SCAN                       P (HIVE.HIVE.HIVEPIS)                                       
HYBRID_HASH_JOIN                                                                            

--- 2 row(s) selected.
>>
>>execute s;

ID           ID           P1           P1           P2
-----------  -----------  -----------  -----------  --------------------------------

          2            2            2            2  two                             
          2           22            2            2  two                             
         22            2            2            2  two                             
         22           22            2            2  two                             
        222            2            2            2  two                             
        222           22            2            2  two                             

--- 6 row(s) selected.
>>
>>control query shape cut;

--- SQL operation complete.
>>
>>-- insert some data and add one more partition
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST005_b.hive.sql;
>>
>>-- customer_ddl table is about 3 MB, make a plan with >= 2 ESPs
>>cqd HIVE_MIN_BYTES_PER_ESP_PARTITION '1000000';

--- SQL operation complete.
>>cqd hive_max_string_length '32000';

--- SQL operation complete.
>>
>>prepare partinsert from
+>insert into hive.hive.customer_p
+>select 
+>    c_customer_sk,
+>    c_customer_id,
+>    c_current_cdemo_sk,
+>    c_current_hdemo_sk,
+>    c_current_addr_sk,
+>    c_first_shipto_date_sk,
+>    c_first_sales_date_sk,
+>    c_salutation,
+>    c_first_name,
+>    c_last_name,
+>    c_birth_day,
+>    c_birth_month,
+>    c_birth_year,
+>    c_birth_country,
+>    c_login,
+>    c_email_address,
+>    c_last_review_date,
+>    c_preferred_cust_flag
+>from hive.hive.customer_ddl <<+cardinality 2.5e4 >>
+>where c_customer_sk < 20000
+>      -- blank partition column values not yet supported
+>      and c_preferred_cust_flag <> ' ';

--- SQL command prepared.
>>
>>-- go back to the smaller string length
>>cqd HIVE_MAX_STRING_LENGTH '32' ;

--- SQL operation complete.
>>
>>-- verify that we are indeed seeing a parallel plan
>>select count(*)
+>from table(explain(null,'PARTINSERT'))
+>where operator = 'ESP_EXCHANGE';

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>
>>execute partinsert;

--- 19314 row(s) inserted.
>>
>>insert into customer_temp 
+>select * from customer 
+>where c_customer_sk between 20000 and 39999;

*** WARNING[6008] Statistics for column (C_CUSTOMER_SK) from table HIVE.HIVE.CUSTOMER were not available. As a result, the access path chosen might not be the best possible.

--- 20000 row(s) inserted.
>>
>>-- query cache hit, no validation at all
>>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_ddl 
+>  group by 1 
+>  order by 1
+>  ;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>
>>-- vary query to avoid query cache hit
>>prepare s2 from 
+>  select c_preferred_cust_flag,
+>         count(c_customer_sk) 
+>  from customer_ddl 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>
>>prepare s2part from
+>  select c_preferred_cust_flag,
+>         count(c_customer_sk) -- avoid query cache
+>  from customer_p 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

--- 0 row(s) selected.
>>-- because we don't invalidate in the executor,
>>-- this should still return 0 rows
>>
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>-- should get an NATable cache
>>-- hit, we should notice the change in the table
>>-- and return the correct result
>>
>>execute s1part;

--- 0 row(s) selected.
>>-- because we don't invalidate in the executor,
>>-- this should still return 0 rows
>>
>>execute s2part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- although this should get an NATable cache
>>-- hit, we should notice the change in the table
>>-- and return the correct result
>>
>>select * from newtable;

--- 0 row(s) selected.
>>-- no rows, but should know the new table
>>insert into newtable values ('abc');

--- 1 row(s) inserted.
>>cqd query_cache '0';

--- SQL operation complete.
>>select * from newtable;

A                               
--------------------------------

abc                             

--- 1 row(s) selected.
>>-- expect to see the row, but only because query cache is off
>>cqd query_cache reset;

--- SQL operation complete.
>>
>>insert into hiveregr5.newtable2 values ('xyz');

--- 1 row(s) inserted.
>>select * from hiveregr5.newtable2;

A                               
--------------------------------

xyz                             

--- 1 row(s) selected.
>>
>>-- recreate newtable and drop hive schema hiveregr5
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST005_c.hive.sql;
>>
>>-- add duplicate rows to customer_p
>>insert into customer_p
+>select 
+>    c_customer_sk,
+>    c_customer_id,
+>    c_current_cdemo_sk,
+>    c_current_hdemo_sk,
+>    c_current_addr_sk,
+>    c_first_shipto_date_sk,
+>    c_first_sales_date_sk,
+>    c_salutation,
+>    c_first_name,
+>    c_last_name,
+>    c_birth_day,
+>    c_birth_month,
+>    c_birth_year,
+>    c_birth_country,
+>    c_login,
+>    c_email_address,
+>    c_last_review_date,
+>    c_preferred_cust_flag
+>from customer_ddl
+>where c_customer_sk between 20000 and 24999
+>      -- blank partition column values not yet supported
+>      and c_preferred_cust_flag <> ' ';

--- 4829 row(s) inserted.
>>
>>-- no query cache hit, but NATable cache hit
>>prepare s3 from 
+>  select count(*) 
+>  from customer_ddl 
+>  ;

--- SQL command prepared.
>>
>>-- no query cache hit, but NATable cache hit
>>prepare s3part from
+>  select c_preferred_cust_flag,
+>         count(c_customer_id) 
+>  from customer_p 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

--- 0 row(s) selected.
>>-- s1 should still return 0 rows - for now
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s3;

(EXPR)              
--------------------

               24999

--- 1 row(s) selected.
>>execute s1part;

--- 0 row(s) selected.
>>-- s1 should still return 0 rows - for now
>>execute s2part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>execute s3part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>
>>select a,b from newtable;

--- 0 row(s) selected.
>>-- should return 0 rows
>>
>>insert into newtable values (1, 'def');

--- 1 row(s) inserted.
>>select a,b from newtable;

A            B                               
-----------  --------------------------------

          1  def                             

--- 1 row(s) selected.
>>
>>-- overwrite customer_p and tbl_utf8p with auto-generated partitions
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST005_d.hive.sql;
>>
>>cqd query_cache '0';

--- SQL operation complete.
>>prepare s4 from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_ddl 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>prepare s4part from
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_p 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s4;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s2part;

*** ERROR[8442] Unable to access HDFS interface. Call to ExpLOBInterfaceSelectCursor/open returned error LOB_DATA_FILE_OPEN_ERROR(508). Error detail 0.

--- 0 row(s) selected.
>>-- error 8442 since the files we are trying to open no longer exist
>>execute s4part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>select count(*) from tbl_utf8;

(EXPR)              
--------------------

                  75

--- 1 row(s) selected.
>>select * from tbl_utf8 where id between 8 and 12;

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

          8  Shin fukatoku 心不可得        The Mind Cannot Be Got            (Bielefeldt)                    
          9  Kobutsushin 古佛心             The Old Buddha Mind               (Bielefeldt)                    
         10  Daigo 大悟                      Great Awakening                   (Bielefeldt)                    
         11  Zazen gi 坐禪儀                Principles of Zazen               (Bielefeldt)                    
         12  Zazen shin 坐禪箴              Lancet of Zazen                   (Bielefeldt)                    

--- 5 row(s) selected.
>>select * from tbl_utf8 where chapter like '%三%';

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

         13  Kaiin zanmai 海印三昧         The Ocean Seal Samadhi            (Bielefeldt & Radich)           
         41  Sangai yuishin 三界唯心       The Three Realms Are Only Mind    (Weinstein)                     
         60  Sanjûshichihon bodai bunpō 三                                    (Weinstein)                     
         66  Zanmai ō zanmai 三昧王三昧  The King of Samadhis Samadhi      (Bielefeldt)                    
         69  Jishō zanmai 自證三昧        The Samadhi of Self Verification  (Bielefeldt)                    

--- 5 row(s) selected.
>>select * from tbl_utf8 where chapter like '%海印_昧%';

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

         13  Kaiin zanmai 海印三昧         The Ocean Seal Samadhi            (Bielefeldt & Radich)           

--- 1 row(s) selected.
>>
>>insert into tbl_utf8_temp 
+>select * from tbl_utf8;

--- 75 row(s) inserted.
>>
>>select count(*) from tbl_utf8_temp;

(EXPR)              
--------------------

                  75

--- 1 row(s) selected.
>>select * from tbl_utf8_temp where id between 8 and 12;

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

          8  Shin fukatoku 心不可得        The Mind Cannot Be Got            (Bielefeldt)                    
          9  Kobutsushin 古佛心             The Old Buddha Mind               (Bielefeldt)                    
         10  Daigo 大悟                      Great Awakening                   (Bielefeldt)                    
         11  Zazen gi 坐禪儀                Principles of Zazen               (Bielefeldt)                    
         12  Zazen shin 坐禪箴              Lancet of Zazen                   (Bielefeldt)                    

--- 5 row(s) selected.
>>select * from tbl_utf8_temp where chapter like '%海印_昧%';

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

         13  Kaiin zanmai 海印三昧         The Ocean Seal Samadhi            (Bielefeldt & Radich)           

--- 1 row(s) selected.
>>
>>select count(*) from tbl_utf8p;

(EXPR)              
--------------------

                  75

--- 1 row(s) selected.
>>select * from tbl_utf8p where id between 8 and 12;

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

          8  Shin fukatoku 心不可得        The Mind Cannot Be Got            (Bielefeldt)                    
          9  Kobutsushin 古佛心             The Old Buddha Mind               (Bielefeldt)                    
         10  Daigo 大悟                      Great Awakening                   (Bielefeldt)                    
         11  Zazen gi 坐禪儀                Principles of Zazen               (Bielefeldt)                    
         12  Zazen shin 坐禪箴              Lancet of Zazen                   (Bielefeldt)                    

--- 5 row(s) selected.
>>select * from tbl_utf8p where chapter like '%海印_昧%';

ID           CHAPTER                           ENGLISH                           TRANSLATOR
-----------  --------------------------------  --------------------------------  --------------------------------

         13  Kaiin zanmai 海印三昧         The Ocean Seal Samadhi            (Bielefeldt & Radich)           

--- 1 row(s) selected.
>>
>>select * from tbl_type;

TINT    SM      I            BIG                   STR                               F                D                          T
------  ------  -----------  --------------------  --------------------------------  ---------------  -------------------------  --------------------------

   201     202          203                   204  two hundred                        2.0000000E+002   2.00000000000000000E+002  2022-02-02 22:22:22.222222

--- 1 row(s) selected.
>>insert into tbl_type_temp select * from tbl_type;

--- 1 row(s) inserted.
>>select * from tbl_type_temp;

TINT    SM      I            BIG                   STR                               F                D                          T
------  ------  -----------  --------------------  --------------------------------  ---------------  -------------------------  --------------------------

   201     202          203                   204  two hundred                        2.0000000E+002   2.00000000000000000E+002  2022-02-02 22:22:22.222222

--- 1 row(s) selected.
>>
>>cqd traf_enable_orc_format 'ON';

--- SQL operation complete.
>>select * from hivenonp;

ID           COL2         P1           P2                                P1T                         P1D
-----------  -----------  -----------  --------------------------------  --------------------------  ----------

          1            1            1  one                               2001-01-01 01:23:45.678901  2001-01-01
         11           11            1  one                               2001-01-01 01:23:45.678901  2001-01-01
          2            2            2  two                               2002-02-02 02:34:56.789012  2020-02-29
         22           22            2  two                               2002-02-02 00:00:00.000000  2020-02-29
        222          222            2  two                               2002-02-02 02:34:56.789012  2020-02-29
          3            3            3  three                             2003-03-03 03:45:57.890123  2003-03-31
         34           34            3  four                              2004-04-04 04:56:18.000000  2004-04-04

--- 7 row(s) selected.
>>select * from hivepi;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2
          1            1            1
         11           11            1
         34           34            3
          3            3            3

--- 7 row(s) selected.
>>select * from hiveps;

ID           COL2         P2                              
-----------  -----------  --------------------------------

          2            2  two                             
         22           22  two                             
        222          222  two                             
          1            1  one                             
         11           11  one                             
         34           34  four                            
          3            3  three                           

--- 7 row(s) selected.
>>select * from hivepis;

ID           COL2         P1           P2                              
-----------  -----------  -----------  --------------------------------

          2            2            2  two                             
         22           22            2  two                             
        222          222            2  two                             
          1            1            1  one                             
         11           11            1  one                             
         34           34            3  four                            
          3            3            3  three                           

--- 7 row(s) selected.
>>select * from hivepts;

ID           COL2         P1T                         P2
-----------  -----------  --------------------------  --------------------------------

          2            2  2002-02-02 02:34:56.789012  two                             
        222          222  2002-02-02 02:34:56.789012  two                             
          1            1  2001-01-01 01:23:45.678901  one                             
         11           11  2001-01-01 01:23:45.678901  one                             
         34           34  2004-04-04 04:56:18.000000  four                            
         22           22  2002-02-02 00:00:00.000000  two                             
          3            3  2003-03-03 03:45:57.890123  three                           

--- 7 row(s) selected.
>>select * from hivepio;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2
          1            1            1
         11           11            1
          3            3            3
         34           34            3

--- 7 row(s) selected.
>>select * from hivepdo;

ID           COL2         P1D       
-----------  -----------  ----------

          2            2  2020-02-29
         22           22  2020-02-29
        222          222  2020-02-29
          1            1  2001-01-01
         11           11  2001-01-01
          3            3  2003-03-31
         34           34  2004-04-04

--- 7 row(s) selected.
>>select * from hivepiso;

ID           COL2         P1           P2                              
-----------  -----------  -----------  --------------------------------

          2            2            2  two                             
         22           22            2  two                             
        222          222            2  two                             
          1            1            1  one                             
         11           11            1  one                             
          3            3            3  three                           
         34           34            3  four                            

--- 7 row(s) selected.
>>
>>prepare s from
+>select * 
+>from hive.hive.hivepis
+>where id=2 and p1=2 and p2 = 'two' and p2 > ? and (id<100 or p2='three');

--- SQL command prepared.
>>--             compile  compile        runtime     not a part elim pred
>>select count(*)
+>from table(explain(null,'S'))
+>where operator like '%SCAN%'
+>  and description like '%part_elim_compiled%';

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>select count(*)
+>from table(explain(null,'S'))
+>where operator like '%SCAN%'
+>  and description like '%part_elim_runtime%';

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>select * from hive.hive.hivepts where p1t > timestamp '2002-01-01 00:00:00.000000' and p2 <> 'four';

ID           COL2         P1T                         P2
-----------  -----------  --------------------------  --------------------------------

          2            2  2002-02-02 02:34:56.789012  two                             
        222          222  2002-02-02 02:34:56.789012  two                             
         22           22  2002-02-02 00:00:00.000000  two                             
          3            3  2003-03-03 03:45:57.890123  three                           

--- 4 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         4

--- 1 row(s) selected.
>>select * from hive.hive.hivepts where p1t < current_timestamp;

ID           COL2         P1T                         P2
-----------  -----------  --------------------------  --------------------------------

          2            2  2002-02-02 02:34:56.789012  two                             
        222          222  2002-02-02 02:34:56.789012  two                             
          1            1  2001-01-01 01:23:45.678901  one                             
         11           11  2001-01-01 01:23:45.678901  one                             
         34           34  2004-04-04 04:56:18.000000  four                            
         22           22  2002-02-02 00:00:00.000000  two                             
          3            3  2003-03-03 03:45:57.890123  three                           

--- 7 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         7

--- 1 row(s) selected.
>>
>>select *,
+>       block__offset__inside__file,
+>       input__range__number,
+>       row__number__in__range
+>       --, cast(substring(input__file__name,1,100) as char(100)) file_name
+>from hive.hive.hivepis;

ID           COL2         P1           P2                                BLOCK__OFFSET__INSIDE__FILE  INPUT__RANGE__NUMBER  ROW__NUMBER__IN__RANGE
-----------  -----------  -----------  --------------------------------  ---------------------------  --------------------  ----------------------

          2            2            2  two                                                         4                     0                       0
         22           22            2  two                                                        10                     0                       1
        222          222            2  two                                                        18                     0                       2
          1            1            1  one                                                         4                     1                       0
         11           11            1  one                                                        10                     1                       1
         34           34            3  four                                                        6                     2                       0
          3            3            3  three                                                       4                     3                       0

--- 7 row(s) selected.
>>select input__range__number, row__number__in__range, block__offset__inside__file
+>from hive.hive.hivenonp;

INPUT__RANGE__NUMBER  ROW__NUMBER__IN__RANGE  BLOCK__OFFSET__INSIDE__FILE
--------------------  ----------------------  ---------------------------

                   0                       0                           48
                   0                       1                           98
                   0                       2                          146
                   0                       3                          196
                   0                       4                          248
                   0                       5                          298
                   0                       6                          349

--- 7 row(s) selected.
>>select input__range__number, row__number__in__range, block__offset__inside__file
+>from hive.hive.hivepi;

INPUT__RANGE__NUMBER  ROW__NUMBER__IN__RANGE  BLOCK__OFFSET__INSIDE__FILE
--------------------  ----------------------  ---------------------------

                   0                       0                            4
                   0                       1                           10
                   0                       2                           18
                   1                       0                            4
                   1                       1                           10
                   2                       0                            6
                   2                       1                           10

--- 7 row(s) selected.
>>
>>prepare s from select * from hive.hive.hivepio;

--- SQL command prepared.
>>execute s;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2
          1            1            1
         11           11            1
          3            3            3
         34           34            3

--- 7 row(s) selected.
>>select * from hive.hive.hivepiso;

ID           COL2         P1           P2                              
-----------  -----------  -----------  --------------------------------

          2            2            2  two                             
         22           22            2  two                             
        222          222            2  two                             
          1            1            1  one                             
         11           11            1  one                             
          3            3            3  three                           
         34           34            3  four                            

--- 7 row(s) selected.
>>
>>-- partition elimination on ORC table
>>select * from hive.hive.hivepio where p1=2;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2

--- 3 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         3

--- 1 row(s) selected.
>>select * from hive.hive.hivepio where p1 in (1,3);

ID           COL2         P1         
-----------  -----------  -----------

          1            1            1
         11           11            1
          3            3            3
         34           34            3

--- 4 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         4

--- 1 row(s) selected.
>>select * from hive.hive.hivepdo where p1d >= date '2002-12-31';

ID           COL2         P1D       
-----------  -----------  ----------

          2            2  2020-02-29
         22           22  2020-02-29
        222          222  2020-02-29
         34           34  2004-04-04
          3            3  2003-03-31

--- 5 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         5

--- 1 row(s) selected.
>>
>>-- this pred can neither be pushed to ORC nor used as
>>-- a partition elimination predicate
>>select * from hive.hive.hivepio where p1=1 or col2<10;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
          1            1            1
         11           11            1
          3            3            3

--- 4 row(s) selected.
>>
>>set catalog trafodion;

--- SQL operation complete.
>>create external table hivepi for hive.hive.hivepi;

--- SQL operation complete.
>>set schema hive.hive;

--- SQL operation complete.
>>update statistics for table hive.hive.hivepi on every column;

--- SQL operation complete.
>>update statistics for table hivepis on every column;

--- SQL operation complete.
>>update statistics for table hivepiso on every column;

--- SQL operation complete.
>>
>>select cast(substring(o.object_name, 1, 20) as
+>            char(20) character set iso88591) object_name,
+>       cast(substring(c.column_name, 1, 20) as
+>            char(20) character set iso88591) col_name
+>  from trafodion."_MD_".objects o 
+>  join trafodion."_MD_".columns c on o.object_uid = c.object_uid
+>  join trafodion."_HIVESTATS_".sb_histograms g on g.table_uid = o.object_uid 
+>                       and g.column_number = c.column_number
+>  where o.object_type = 'BT'
+>    and o.object_name in ('HIVEPI', 'HIVEPIS', 'HIVEPISO')
+>order by 1, 2;

OBJECT_NAME           COL_NAME            
--------------------  --------------------

HIVEPI                COL2                
HIVEPI                ID                  
HIVEPI                P1                  
HIVEPIS               COL2                
HIVEPIS               ID                  
HIVEPIS               P1                  
HIVEPIS               P2                  
HIVEPISO              COL2                
HIVEPISO              ID                  
HIVEPISO              P1                  
HIVEPISO              P2                  

--- 11 row(s) selected.
>>
>>drop external table hivepi for hive.hive.hivepi;

--- SQL operation complete.
>>
>>cqd HIVE_FILE_CHARSET 'GBK';

--- SQL operation complete.
>>select c1, CONVERTTOHEX(c2) from tbl_gbk;

C1           (EXPR)
-----------  ----------------------------------------------------------------

          3  EC8B90EC978E                                                    
          5  EC8B90EC978E                                                    
          2  EC8B90EC978E                                                    
          4  EC8B90EC978E                                                    
          6  EC8B90EC978E                                                    
          7  EC8B90EC978E                                                    
          8  EC8B90EC978E                                                    
          3  ECBB93EB9F8FECAB97EB9B91                                        
          2  ECBB93EB9F8FECAB97EB9B91                                        
          6  ECBB93EB9F8FECAB97EB9B91                                        
         19  ECBB93EB9F8FECAB97EB9B91                                        
          8  ECBB93EB9F8FECAB97EB9B91                                        

--- 12 row(s) selected.
>>cqd HIVE_FILE_CHARSET reset;

--- SQL operation complete.
>>
>>cqd HIVE_SCAN_SPECIAL_MODE '1';

--- SQL operation complete.
>>select * from tbl_dos;

C1           C2           C3           C4                              
-----------  -----------  -----------  --------------------------------

          0        39478         8147  2008-07-17                      
          1        21944         8327  2005-05-12                      
          2        32730         9999  2000-11-05                      
          3        19653         5727  2005-06-24                      
          4        67794         6012  2008-07-01                      
          5        93265         5823  2012-06-26                      
          6        28219          909  2009-04-26                      
          7        23967         8290  2006-02-21                      
          8        24265         8663  2006-10-06                      
          9        70273         3363  2001-03-17                      

--- 10 row(s) selected.
>>cqd HIVE_SCAN_SPECIAL_MODE reset;

--- SQL operation complete.
>>drop table if exists trafodion.seabase.tbl_dos_num;

--- SQL operation complete.
>>create table trafodion.seabase.tbl_dos_num (c1 int, c2 int);

--- SQL operation complete.
>>load with NO OUTPUT into trafodion.seabase.tbl_dos_num select * from tbl_dos_num;

*** ERROR[8413] The string argument contains characters that cannot be converted.

--- 0 row(s) loaded.
>>cqd HIVE_SCAN_SPECIAL_MODE '1';

--- SQL operation complete.
>>load with no output into trafodion.seabase.tbl_dos_num select * from tbl_dos_num;

--- 10 row(s) loaded.
>>select * from trafodion.seabase.tbl_dos_num;

C1           C2         
-----------  -----------

          0        39478
          1        21944
          2        32730
          3        19653
          4        67794
          5        93265
          6            ?
          7            ?
          8            ?
          9           17

--- 10 row(s) selected.
>>cqd HIVE_SCAN_SPECIAL_MODE reset;

--- SQL operation complete.
>>log;
