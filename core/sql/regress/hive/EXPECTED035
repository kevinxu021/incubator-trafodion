>>
>>set schema hive.hive;

--- SQL operation complete.
>>set terminal_charset utf8;
>>
>>cqd AUTO_QUERY_RETRY_WARNINGS 'ON';

--- SQL operation complete.
>>cqd HIVE_MAX_STRING_LENGTH '32' ;

--- SQL operation complete.
>>cqd hist_missing_stats_warning_level '0';

--- SQL operation complete.
>>
>>cqd HIST_ROWCOUNT_REQUIRING_STATS '50000';

--- SQL operation complete.
>>------------------------------------------------------------
>>-- Testing query plan invalidation in the compiler, but
>>-- not the executor. Perform DML/DDL operations on a
>>-- table and try re-executing the old plan as well as
>>-- getting a query cache hit and updating the changed
>>-- Hive and HDFS metadata
>>------------------------------------------------------------
>>
>>prepare s1 from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_temp_orc
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

--- 0 row(s) selected.
>>-- expect 0 rows
>>
>>prepare s1part from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_p_orc
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1part;

--- 0 row(s) selected.
>>-- expect 0 rows
>>
>>insert into hive.hive.hivenonp_orc
+>values -- partition 1,one
+>       (1,1,1,'one', timestamp '2001-01-01 01:23:45.678901', date '2001-01-01'),
+>       (11,11,1,'one', timestamp '2001-01-01 01:23:45.678901', date '2001-01-01'),
+>       -- partition 2,two
+>       (2,2,2,'two', timestamp '2002-02-02 02:34:56.789012', date '2020-02-29'),
+>       (22,22,2,'two', timestamp '2002-02-02 00:00:00.000000', date '2020-02-29'),
+>       (222,222,2,'two', timestamp '2002-02-02 02:34:56.789012', date '2020-02-29'),
+>       -- partition 3,three
+>       (3,3,3,'three', timestamp '2003-03-03 03:45:57.890123', date '2003-03-31'),
+>       -- partition 3 or partition 3,four
+>       (34,34,3,'four', timestamp '2004-04-04 04:56:18', date '2004-04-04');

--- 7 row(s) inserted.
>>select * from hive.hive.hivenonp_orc;

ID           COL2         P1           P2                                P1T                         P1D
-----------  -----------  -----------  --------------------------------  --------------------------  ----------

          1            1            1  one                               2001-01-01 01:23:45.678901  2001-01-01
         11           11            1  one                               2001-01-01 01:23:45.678901  2001-01-01
          2            2            2  two                               2002-02-02 02:34:56.789012  2020-02-29
         22           22            2  two                               2002-02-02 00:00:00.000000  2020-02-29
        222          222            2  two                               2002-02-02 02:34:56.789012  2020-02-29
          3            3            3  three                             2003-03-03 03:45:57.890123  2003-03-31
         34           34            3  four                              2004-04-04 04:56:18.000000  2004-04-04

--- 7 row(s) selected.
>>
>>insert into hive.hive.hivepis_orc select id, col2, p1, p2 from hive.hive.hivenonp_orc;

--- 7 row(s) inserted.
>>insert into hive.hive.hivepts_orc select id, col2, p1t, p2 from hive.hive.hivenonp_orc;

--- 7 row(s) inserted.
>>insert into hive.hive.hivepi_orc  select id, col2, p1 from hive.hive.hivepis_orc;

--- 7 row(s) inserted.
>>insert overwrite table hive.hive.hivepi_orc  select id, col2, p1 from hive.hive.hivepis_orc;

*** ERROR[4223] INSERT OVERWRITE TABLE into partitioned Hive tables is not supported in this software version.

*** ERROR[8822] The statement was not prepared.

>>-- error, insert overwrite table not allowed for partitioned tables
>>
>>prepare display_rows_accessed from
+>select val4_txt, val4
+>from table(statistics(null,null))
+>where tdb_name like '%_SCAN %';

--- SQL command prepared.
>>
>>select * from hive.hive.hivepis_orc;

ID           COL2         P1           P2                              
-----------  -----------  -----------  --------------------------------

          2            2            2  two                             
         22           22            2  two                             
        222          222            2  two                             
          1            1            1  one                             
         11           11            1  one                             
          3            3            3  three                           
         34           34            3  four                            

--- 7 row(s) selected.
>>select * from hive.hive.hivepts_orc;

ID           COL2         P1T                         P2
-----------  -----------  --------------------------  --------------------------------

          2            2  2002-02-02 02:34:56.789012  two                             
        222          222  2002-02-02 02:34:56.789012  two                             
          1            1  2001-01-01 01:23:45.678901  one                             
         11           11  2001-01-01 01:23:45.678901  one                             
         34           34  2004-04-04 04:56:18.000000  four                            
         22           22  2002-02-02 00:00:00.000000  two                             
          3            3  2003-03-03 03:45:57.890123  three                           

--- 7 row(s) selected.
>>select * from hive.hive.hivepi_orc;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2
          1            1            1
         11           11            1
          3            3            3
         34           34            3

--- 7 row(s) selected.
>>
>>control query shape cut;

--- SQL operation complete.
>>
>>-- insert some data and add one more partition
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST035_b.orc.sql;
>>
>>-- customer_ddl_orc table is about 3 MB, make a plan with >= 2 ESPs
>>cqd HIVE_MIN_BYTES_PER_ESP_PARTITION '1000000';

--- SQL operation complete.
>>cqd hive_max_string_length '32000';

--- SQL operation complete.
>>
>>prepare partinsert from
+>insert into hive.hive.customer_p_orc
+>select 
+>    c_customer_sk,
+>    c_customer_id,
+>    c_current_cdemo_sk,
+>    c_current_hdemo_sk,
+>    c_current_addr_sk,
+>    c_first_shipto_date_sk,
+>    c_first_sales_date_sk,
+>    c_salutation,
+>    c_first_name,
+>    c_last_name,
+>    c_birth_day,
+>    c_birth_month,
+>    c_birth_year,
+>    c_birth_country,
+>    c_login,
+>    c_email_address,
+>    c_last_review_date,
+>    c_preferred_cust_flag
+>from hive.hive.customer_ddl <<+cardinality 2.5e4 >>
+>where c_customer_sk < 20000
+>      -- blank partition column values not yet supported
+>      and c_preferred_cust_flag <> ' '
+>order by c_customer_sk;

--- SQL command prepared.
>>
>>-- go back to the smaller string length
>>cqd HIVE_MAX_STRING_LENGTH '32' ;

--- SQL operation complete.
>>
>>-- verify that we are indeed seeing a parallel plan
>>select count(*)
+>from table(explain(null,'PARTINSERT'))
+>where operator = 'ESP_EXCHANGE';

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>
>>explain options 'f' partinsert;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

5    .    6    root                                                  2.50E+004
4    .    5    esp_exchange                    1:4(hash2)            2.50E+004
2    .    4    orc_insert                      CUSTOMER_P_ORC        2.50E+004
1    .    2    sort                                                  2.50E+004
.    .    1    hive_scan                       CUSTOMER_DDL          2.50E+004

--- SQL operation complete.
>>
>>execute partinsert;

--- 19314 row(s) inserted.
>>
>>insert into customer_temp_orc 
+>select * from customer 
+>where c_customer_sk between 20000 and 39999;

--- 20000 row(s) inserted.
>>
>>-- query cache hit, no validation at all
>>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_ddl_orc 
+>  group by 1 
+>  order by 1
+>  ;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>
>>-- vary query to avoid query cache hit
>>prepare s2 from 
+>  select c_preferred_cust_flag,
+>         count(c_customer_sk) 
+>  from customer_ddl_orc 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>
>>prepare s2part from
+>  select c_preferred_cust_flag,
+>         count(c_customer_sk) -- avoid query cache
+>  from customer_p_orc 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   699
N                                                 9842
Y                                                 9459

--- 3 row(s) selected.
>>-- because we don't invalidate in the executor,
>>-- this should still return 0 rows
>>
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>-- should get an NATable cache
>>-- hit, we should notice the change in the table
>>-- and return the correct result
>>
>>execute s1part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- because we don't invalidate in the executor,
>>-- this should still return 0 rows
>>
>>execute s2part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- although this should get an NATable cache
>>-- hit, we should notice the change in the table
>>-- and return the correct result
>>
>>-- add duplicate rows to customer_p_orc
>>insert into customer_p_orc
+>select 
+>    c_customer_sk,
+>    c_customer_id,
+>    c_current_cdemo_sk,
+>    c_current_hdemo_sk,
+>    c_current_addr_sk,
+>    c_first_shipto_date_sk,
+>    c_first_sales_date_sk,
+>    c_salutation,
+>    c_first_name,
+>    c_last_name,
+>    c_birth_day,
+>    c_birth_month,
+>    c_birth_year,
+>    c_birth_country,
+>    c_login,
+>    c_email_address,
+>    c_last_review_date,
+>    c_preferred_cust_flag
+>from customer_ddl
+>where c_customer_sk between 20000 and 24999
+>      -- blank partition column values not yet supported
+>      and c_preferred_cust_flag <> ' '
+>order by c_customer_sk;

--- 4829 row(s) inserted.
>>
>>-- no query cache hit, but NATable cache hit
>>prepare s3 from 
+>  select count(*) 
+>  from customer_ddl_orc 
+>  ;

--- SQL command prepared.
>>
>>-- no query cache hit, but NATable cache hit
>>prepare s3part from
+>  select c_preferred_cust_flag,
+>         count(c_customer_id) 
+>  from customer_p_orc 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   699
N                                                 9842
Y                                                 9459

--- 3 row(s) selected.
>>-- s1 should still return 0 rows - for now
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s3;

(EXPR)              
--------------------

               24999

--- 1 row(s) selected.
>>execute s1part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>-- s1 should still return 0 rows - for now
>>execute s2part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>execute s3part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>
>>-- overwrite customer_p_orc with auto-generated partitions
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST035_d.orc.sql;
>>
>>prepare s4 from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_ddl_orc 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>prepare s4part from
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_p_orc 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s4;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s2part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- error 8442 since the files we are trying to open no longer exist
>>execute s4part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>
>>-- partition elimination on ORC table
>>select * from hive.hive.hivepio_orc where p1=2;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2

--- 3 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         3

--- 1 row(s) selected.
>>select * from hive.hive.hivepio_orc where p1 in (1,3);

ID           COL2         P1         
-----------  -----------  -----------

          1            1            1
         11           11            1
          3            3            3
         34           34            3

--- 4 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         4

--- 1 row(s) selected.
>>select * from hive.hive.hivepdo_orc where p1d >= date '2002-12-31';

ID           COL2         P1D       
-----------  -----------  ----------

          2            2  2020-02-29
         22           22  2020-02-29
        222          222  2020-02-29
         34           34  2004-04-04
          3            3  2003-03-31

--- 5 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

AccessedRows                         5

--- 1 row(s) selected.
>>
>>-- this pred can neither be pushed to ORC nor used as
>>-- a partition elimination predicate
>>select * from hive.hive.hivepio_orc where p1=1 or col2<10;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
          1            1            1
         11           11            1
          3            3            3

--- 4 row(s) selected.
>>
>>-- tests for orc timestamp mismatch check
>>cqd auto_query_retry_warnings 'ON';

--- SQL operation complete.
>>
>>sh echo "drop table torc;" > TEST035_junk;
>>sh regrhive.ksh -f TEST035_junk;
>>
>>sh echo "create table torc(a int) stored as orc;" > TEST035_junk;
>>sh regrhive.ksh -f TEST035_junk;
>>
>>select a from hive.hive.torc;

--- 0 row(s) selected.
>>
>>sh echo "insert into torc values (1);" > TEST035_junk;
>>sh regrhive.ksh -f TEST035_junk;
>>
>>select a from hive.hive.torc;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

A          
-----------

          1

--- 1 row(s) selected.
>>insert into hive.hive.torc values (2);

--- 1 row(s) inserted.
>>select a from hive.hive.torc;

A          
-----------

          1
          2

--- 2 row(s) selected.
>>
>>sh echo "drop table torc;" > TEST035_junk;
>>sh regrhive.ksh -f TEST035_junk;
>>
>>sh echo "create table torc(a int, b int) stored as orc;" > TEST035_junk;
>>sh regrhive.ksh -f TEST035_junk;
>>
>>sh echo "insert into torc values (1,2);" > TEST035_junk;
>>sh regrhive.ksh -f TEST035_junk;
>>
>>select a from hive.hive.torc;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions.

A          
-----------

          1

--- 1 row(s) selected.
>>
>>select * from hive.hive.torc;

A            B          
-----------  -----------

          1            2

--- 1 row(s) selected.
>>
>>log;
