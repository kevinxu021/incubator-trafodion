-- Tests for ORC file access
-- Added Nov 2014
--
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

log LOG030 clear;
obey TEST030(setup);
obey TEST030(tests);
log;
exit;

?section setup
--------------------------------------------------------------------------

set schema hive.hive;
cqd HIVE_MAX_STRING_LENGTH '20' ;
cqd mode_seahive 'ON';
cqd traf_enable_orc_format 'ON';
cqd HIST_ROWCOUNT_REQUIRING_STATS '50000';

prepare explainIt from
  select substring(cast(SEQ_NUM+100 as char(3)),2,2) s,
         substring(operator,1,16) operator,
         cast(LEFT_CHILD_SEQ_NUM as char(2)) lc,
         cast(RIGHT_CHILD_SEQ_NUM as char(2)) rc,
         substring
         (substring(substring(tname from (1+locate('.',tname))),1,case locate(')',tname) when 0 then 0 else locate(')',substring(tname from (1+locate('.',tname))))-1 end),
         (locate('.',substring(tname from (1+locate('.',tname)))))+1,
         10
        ) tab_name
         from table (explain(NULL,'XX'))
         order by 1 desc;

?section tests
--------------------------------------------------------------------------
-- ORC file metadata info
invoke hive.hive.store_orc;

-- select one row from ORC table
select [first 1] * from hive.hive.store_orc;

-- select all rows from ORC table
select * from hive.hive.store_orc order by s_store_sk;

-- select of few columns with WHERE predicate
select s_store_sk, left(s_store_id, 20) from hive.hive.store_orc where s_store_sk < 7;

-- select count of rows 
select count(*) from hive.hive.store_orc;

-- explain of join between 2 ORC tables
prepare XX from select x.s_suite_number, y.s_street_name
 from hive.hive.store_orc x, hive.hive.store_orc y
  where x.s_store_sk = y.s_store_sk;
execute explainIt;

-- execute of join between 2 ORC tables
execute XX;

-- explain of join between hive(hdfs) and ORC tables
prepare XX from select x.s_suite_number, y.s_street_name
 from hive.hive.store x, hive.hive.store_orc y
  where x.s_store_sk = y.s_store_sk;
execute explainIt;

-- execute of join between hive(hdfs) and ORC tables
execute XX;

-- column list pushdown test
cqd orc_columns_pushdown 'OFF';
showplan option 't' select s_store_sk from store_orc;
select s_store_sk from store_orc;
cqd orc_columns_pushdown 'ON';
showplan option 't' select s_store_sk from store_orc;
select s_store_sk from store_orc;

-- predicate pushdown to ORC layer
cqd orc_pred_pushdown 'OFF';
select s_store_sk from store_orc where s_store_sk = 3;
select s_store_sk from store_orc where s_store_sk < 2;
select s_store_sk from store_orc where s_store_sk >= 11;
select s_store_sk from store_orc where s_store_sk >= 4 and s_store_sk < 6;
select s_store_sk from store_orc where s_store_sk in (7,8,9);
showplan option 't' select s_store_sk from store_orc where s_store_sk = 3;

cqd orc_pred_pushdown 'ON';
select s_store_sk from store_orc where s_store_sk = 3;
select s_store_sk from store_orc where s_store_sk < 2;
select s_store_sk from store_orc where s_store_sk >= 11;
select s_store_sk from store_orc where s_store_sk >= 4 and s_store_sk < 6;
select s_store_sk from store_orc where s_store_sk in (7,8,9);
showplan option 't' select s_store_sk from store_orc where s_store_sk = 3;

-- aggregate pushdown to ORC layer
cqd orc_aggr_pushdown 'ON';
explain options 'f' select count(*) from store_orc;
select count(*) from store_orc;
select count(*), count(*) from store_orc;
select min(s_store_sk) from store_orc;
select max(s_store_sk) from store_orc;
select sum(s_store_sk) from store_orc;
select count(*), min(s_store_sk), max(s_store_sk), sum(s_store_sk) 
   from store_orc;
explain options 'f' select count(*), min(s_store_sk), max(s_store_sk), 
   sum(s_store_sk) from store_orc;

explain options 'f'
  select count(*) from hive.hive.store_orc union all 
  select count(*) from hive.hive.store_orc;
select count(*) from hive.hive.store_orc union all 
  select count(*) from hive.hive.store_orc;

explain options 'f'
  select min(s_store_sk) from hive.hive.store_orc union all 
  select min(s_store_sk) from hive.hive.store_orc;
select min(s_store_sk) from hive.hive.store_orc union all 
  select min(s_store_sk) from hive.hive.store_orc;

explain options 'f' select count(s_store_sk) from store_orc;
select count(s_store_sk) from store_orc;

explain options 'f' select count(*) from store_orc
  having sum(s_store_sk) = 78;
select count(*) from store_orc having sum(s_store_sk) = 78;

select count(*) from store_orc having sum(s_store_sk) = 77;

cqd orc_aggr_pushdown 'OFF';
explain options 'f' select count(*), min(s_store_sk), max(s_store_sk), 
   sum(s_store_sk) from store_orc;
select count(*), min(s_store_sk), max(s_store_sk), sum(s_store_sk) 
   from store_orc;

-- test query cache 
prepare xx from select cd_gender from customer_demographics_orc where cd_gender = 'male' ;
select num_hits, num_params from table(querycacheentries('user', 'local')) 
where substring(text, 1, 16) = 'select cd_gender' order by 1,2;

prepare xx from select cd_gender from customer_demographics_orc where cd_gender = 'female' ;
select num_hits, num_params from table(querycacheentries('user', 'local')) 
where substring(text, 1, 16) = 'select cd_gender' order by 1,2;


-- test external table attributes
set schema trafodion.sch;
drop external table if exists store_sales_orc for hive.hive.store_sales_orc;
create external table store_sales_orc 
  for hive.hive.store_sales_orc primary key (ss_item_sk);
invoke hive.hive.store_sales_orc;

set schema hive.hive;
prepare s from select * from store_sales_orc where ss_item_sk = 1;
explain s;

-- join with nested join
control query shape nested_join(scan(path 'CUSTOMER_ORC'), 
      scan(path 'STORE_SALES_ORC'));
prepare s from select * from customer_orc, store_sales_orc 
    where store_sales_orc.ss_item_sk = customer_orc.c_customer_sk;
explain options 'f' s;
explain s;

control query shape cut;
set schema trafodion.sch;
drop external table if exists date_dim_orc for hive.hive.date_dim_orc;
cqd volatile_table_find_suitable_key 'SYSTEM';
create external table date_dim_orc 
  (d_date_sk int, d_date_id varchar(100 bytes) character set utf8, d_date date, 
   d_month_seq int, d_week_seq int, d_quarter_seq int, d_year int, d_dow int,
   d_moy int, d_dom int, d_qoy int, d_fy_year int, d_fy_quarter_seq int,
   d_fy_week_seq int,
   d_day_name varchar(120 bytes) character set utf8, d_quarter_name varchar(200 bytes) character set utf8, d_holiday varchar(100 bytes) character set utf8,
   d_weekend varchar(100 bytes) character set utf8, d_following_holiday varchar(100 bytes) character set utf8, 
   d_first_dom int, d_last_dom int, d_same_day_ly int, d_same_day_lq int,
   d_current_day varchar(100 bytes) character set utf8, d_current_week varchar(111 bytes) character set utf8,
   d_current_month varchar(200 bytes) character set utf8, d_current_quarter varchar(100 bytes) character set utf8, 
   d_current_year varchar(100 bytes) character set utf8)
  for hive.hive.date_dim_orc primary key (d_date);
invoke hive.hive.date_dim_orc;
showddl hive.hive.date_dim_orc;
prepare s from select * from hive.hive.date_dim_orc where d_date = date '2016-01-27';
explain s;

drop external table if exists date_dim_orc for hive.hive.date_dim_orc;
create external table date_dim_orc 
  (d_date_sk int, d_date_id varchar(100 bytes) character set utf8, d_date date)
  for hive.hive.date_dim_orc primary key (d_date);
invoke hive.hive.date_dim_orc;
showddl hive.hive.date_dim_orc;
prepare s from select * from hive.hive.date_dim_orc where d_date = date '2016-01-27';
explain s;


-- error cases
drop external table if exists date_dim_orc for hive.hive.date_dim_orc;

-- column d_date_skk doesn't exist in native hive table
create external table date_dim_orc 
  (d_date_skk int)
  for hive.hive.date_dim_orc;

-- column d_date_sk has incompatible type
create external table date_dim_orc 
  (d_date_sk date)
  for hive.hive.date_dim_orc;

