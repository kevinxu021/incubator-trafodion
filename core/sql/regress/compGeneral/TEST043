-- Test Optimizer Simulater for hive table.
-- Compare capturing time plans and histograms to simulating time.
-- Capturing time log is printed as EXPECTED file.
-- Simulating time log is printed as LOG file.
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

sh sqlci -i "TEST043(create_tables)";
sh sqlci -i "TEST043(test_capture)";
sh sqlci -i "TEST043(test_simulate)";
exit;

?section prepare_check
--check sb_histograms
prepare check_histograms from 
select 
  col_position
, column_number
, colcount
, interval_count
, rowcount
, total_uec
, stats_time
, low_value
, high_value 
, read_time 
, read_count 
, sample_secs
, col_secs
, sample_percent
, cv
, reason
from SB_HISTOGRAMS where 
table_uid = (select object_uid from TRAFODION."_MD_".objects where object_name = ? and schema_name = ?);

--check sb_histogram_intervals
prepare check_histogram_intervals from 
select 
interval_number,
interval_rowcount,
interval_uec,
interval_boundary,
std_dev_of_freq
from SB_HISTOGRAM_INTERVALS 
where table_uid = 
(select object_uid from TRAFODION."_MD_".objects where object_name = ? and schema_name = ?);


?section create_tables
create schema if not exists trafodion.osimregr;
set schema trafodion.osimregr;
drop table if exists osimt1;
create table osimt1
(
    id                          INT NO DEFAULT NOT NULL NOT DROPPABLE
  , id2                         INT NO DEFAULT NOT NULL NOT DROPPABLE
  , number                      INT NO DEFAULT NOT NULL NOT DROPPABLE
  , primary key (id asc)
)
salt using 8 partitions on (id);

insert into osimt1
values
(1,3,38994),
(2,2,16909),
(3,4,75288),
(4,6,17362),
(5,8,93745),
(6,9,68201),
(7,5,57108),
(8,3,92861),
(9,5,44744),
(10,6,44466);

update statistics for table osimt1 on number;

?section test_capture
--start capture
sh rm -rf osim;
set schema trafodion.osimregr;
obey TEST043(prepare_check);
control osim capture location 'osim';
log EXPECTED043 clear;

prepare xx from select * from osimt1 where id > 2 and id < 9;

explain options 'f' xx;

execute check_histograms using 'OSIMT1', 'OSIMREGR';

execute check_histogram_intervals using 'OSIMT1', 'OSIMREGR';

log;
control osim capture stop;

--------------------------------------------------------------------
?section test_simulate
drop table if exists trafodion.osimregr.osimt1;
--start simulation
set schema trafodion.osimregr;
obey TEST043(prepare_check);
control osim load from 'osim';
control osim simulate start;
log LOG043 clear;

prepare xx from select * from osimt1 where id > 2 and id < 9;

explain options 'f' xx;

execute check_histograms using 'OSIMT1', 'OSIMREGR';

execute check_histogram_intervals using 'OSIMT1', 'OSIMREGR';

log;


