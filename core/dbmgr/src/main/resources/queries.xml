<?xml version="1.0" encoding="UTF-8"?>
<!-- @@@ START COPYRIGHT @@@
 
     (C) Copyright 2015 Esgyn Corporation
 
     @@@ END COPYRIGHT @@@
-->
<SystemQueries>
	<queries>
		<query>
			<!-- Get List of DCS servers and their status -->
			<name>GET_DCS_SERVERS</name>
			<text><![CDATA[{"url":"http://%1$s/v1/servers/dcs/connections", "method":"get"}]]></text>
		</query>
		<query>
			<!-- Get status of EsgynDB Services -->
			<name>GET_SERVICE_STATUS</name>
			<text><![CDATA[{"url":"http://%1$s/v1/servers", "method":"get"}]]></text>
		</query>
		<query>
			<!-- Get status of EsgynDB nodes -->
			<name>GET_NODE_STATUS</name>
			<text><![CDATA[{"url":"http://%1$s/v1/servers/nodes", "method":"get"}]]></text>
		</query>				
		<query>
			<!-- Fetch list of schemas -->
			<name>SELECT_SCHEMAS</name>
			<text><![CDATA[select distinct schema_name as "Name", schema_owner as "Owner", 
					converttimestamp(create_time) as "CreateTime", converttimestamp(redef_time) as "ModifiedTime" 
					from "_MD_".objects 
					where object_name = '__SCHEMA__'
					order by schema_name FOR READ UNCOMMITTED ACCESS;
				]]></text>
		</query>
		<query>
			<!-- Fetch details about a specific schema -->
			<name>SELECT_SCHEMA</name>
			<text><![CDATA[select distinct schema_name as "Name", user(schema_owner) as "Owner", 
					converttimestamp(create_time) as "CreateTime", converttimestamp(redef_time) as "ModifiedTime" 
					from "_MD_".objects 
					where schema_name = '%1$s'
					and object_name = '__SCHEMA__'
					order by schema_name FOR READ UNCOMMITTED ACCESS;
				]]></text>
		</query>
		<query>
			<!-- Fetch list of schema objects (tables/mvs/views/libraries/procedures) -->
			<name>SELECT_SCHEMA_OBJECTS</name>
			<text><![CDATA[select distinct object_name as "Name", user(object_owner) as "Owner", 
					converttimestamp(create_time) as "CreateTime", converttimestamp(redef_time) as "ModifiedTime" 
					from "_MD_".objects 
					where schema_name = '%1$s'
					and object_type = '%2$s'
					order by object_name FOR READ UNCOMMITTED ACCESS;
				]]></text>
		</query>
		<query>
			<!-- Fetch list of historical workloads -->
			<name>SELECT_REPO_QUERIES</name>
			<text><![CDATA[SELECT query_id as "Query ID", query_status AS "Status" ,
						exec_start_utc_ts as "Start Time", exec_end_utc_ts AS "End Time", 
						USER_NAME AS "User Name",  APPLICATION_NAME as "Application",
						CLIENT_NAME as "Client", query_elapsed_time AS "Elapsed Time", 
						QUERY_TEXT AS "Query Text"
					FROM "_REPOS_".metric_query_table 
					%1$s
					order by exec_start_utc_ts desc
					for read uncommitted access;
				]]></text>
		</query>
		<query>
			<!-- Fetch query detail from repository -->
			<name>SELECT_REPO_QUERY_DETAIL</name>
			<text><![CDATA[select user_name,
						query_status, 
						exec_start_utc_ts, 
						exec_end_utc_ts, 
						query_sub_status,
						master_process_id,
						process_name,
						session_id,
						user_name,
						application_name,
						client_name,
						statement_type,
						statement_subtype,
						submit_utc_ts,
						compile_start_utc_ts,
						compile_end_utc_ts,
						compile_elapsed_time,
						cmp_dop,
						cmp_missing_stats,
						cmp_num_joins,
						cmp_full_scan_on_table,
						est_accessed_rows,
						est_used_rows,
						cmp_cpu_path_length,
						cmp_stmt_heap_size,
						cmp_context_heap_size,
						est_cost,
						est_cardinality,
						est_io_time,
						est_msg_time,
						est_idle_time,
						est_cpu_time,
						est_total_mem,
						cmp_number_of_bmos,
						cmp_overflow_size,
						stats_error_code,
						query_elapsed_time,
						sql_process_busy_time,
						disk_process_busy_time,
						disk_ios,
						num_sql_processes,
						total_mem_alloc,
						max_mem_used,
						transaction_id,
						master_execution_time,
						master_elapsed_time,
						error_code,
						sql_error_code,
						error_text,
						query_text,
						total_num_aqr_retries,
						msg_bytes_to_disk,
						msgs_to_disk,
						num_rows_iud,
						processes_created,
						num_nodes,
						ovf_buffer_bytes_written,
						ovf_buffer_bytes_read
						from "_REPOS_".metric_query_table
				 WHERE query_id = '%1$s']]></text>
		</query>
		<query>
			<!-- Fetch list of active queries visible in RMS -->
			<name>SELECT_ACTIVE_QUERIES</name>
			<text><![CDATA[select current_timestamp "Time"   -- (1) Now
				      ,cast(tokenstr('lastActivity:', variable_info)               -- (2) Last Activity
				            as NUMERIC(18) ) "Last Activity Seconds"
				      ,cast(tokenstr('Qid:', variable_info)               -- (3) QID
				            as varchar(175) CHARACTER SET UTF8) "Query ID"
				      , cast(tokenstr('State:', variable_info)           -- (4) State
				             as char(30)) "Execution State"
				      , cast(substr(variable_info,             -- (5) SQL Source
				             position('%1$s' in variable_info) + char_length('%1$s'),
				             char_length(variable_info) - 
				                        ( position('%1$s' in variable_info) + char_length('%1$s') ))
				            as char(256) CHARACTER SET UTF8) "Query Text"          
				from table (statistics(NULL, 'ACTIVE_QUERIES=%2$s')) 
				order by 2 descending;
				]]></text>
		</query>
		<query>
			<!-- Fetch active query detail from rms -->
			<name>SELECT_ACTIVE_QUERY_DETAIL</name>
			<text><![CDATA[get statistics for qid %1$s %2$s]]></text>
		</query>
		<query>
			<name>CANCEL_QUERY</name>
			<text><![CDATA[control query cancel qid %1$s]]></text>
		</query>
		<query>
			<!-- Fetch list of log entries -->
			<name>SELECT_LOGS</name>
			<text><![CDATA[select [first 100000] log_ts as "Time", severity as "Severity", component as "Component", process_name as "Process", sql_code as "Error Code", cast(message as char(1000)) as "Message"
				from udf(event_log_reader()) 
				%1$s
				order by log_ts desc
				]]></text>
		</query>
		<query>
			<name>OPENTSDB_IOWAITS</name>
			<text><![CDATA[{"url":"http://%1$s/api/query?start=1h-ago&end=1s-ago&m=avg:rate:down-sampler:1m-avg:proc.stat.cpu{type=iowait}", "method":"get"}]]></text>
		</query>
		<query>
			<name>OPENTSDB_DISK_READS</name>
			<text><![CDATA[{"url":"http://%1$s/api/query?start=1h-ago&end=1s-ago&ms=true&m=sum:rate:iostat.disk.read_requests", "method":"get"}]]></text>
		</query>
		<query>
			<name>OPENTSDB_DISK_WRITES</name>
			<text><![CDATA[{"url":"http://%1$s/api/query?start=1h-ago&end=1s-ago&ms=true&m=sum:rate:iostat.disk.write_requests", "method":"get"}]]></text>
		</query>
		<query>
			<name>OPENTSDB_GCTIME</name>
			<text><![CDATA[{"url":"http://%1$s/api/query?start=1h-ago&end=1s-ago&ms=true&m=sum:rate:hbase.regionserver.jvmmetrics.GcTimeMillis", "method":"get"}]]></text>
		</query>
		<query>
			<name>OPENTSDB_LOADAVG_1</name>
			<text><![CDATA[{"url":"http://%1$s/api/query?start=1h-ago&end=1s-ago&ms=true&m=avg:rate:proc.loadavg.1min", "method":"get"}]]></text>
		</query>
		<query>
			<name>OPENTSDB_GETOPS</name>
			<text><![CDATA[{"url":"http://%1$s/api/query?start=1h-ago&end=1s-ago&ms=true&m=avg:rate:hbase.regionserver.server.Get_num_ops", "method":"get"}]]></text>
		</query>
	</queries>
</SystemQueries>
