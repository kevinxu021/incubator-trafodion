#
# XXX Home Directory where Javabench was installed
export JAVABENCH_HOME=/home/trafodion/JavaBench
export JAVABENCH_TEST_HOME=$PWD
export JAVABENCH_LOG_HOME=${JAVABENCH_TEST_HOME}/log

export JAVABENCH_DEFAULT_DATABASE=trafodion
export JAVABENCH_DEFAULT_SCHEMA=javabench

# System Level information
# XXX System name
export SYSTEM_NAME=spinel

# The following configurations parms are picked up by some of the script in JavaBench-<<version>>/bin
# XXX Number of nodes on the system
export SYSTEM_NODES=10

# XXX Number of partitions by default
export SYSTEM_DEFAULT_PARTITIONS=20

# XXX Name of first node
export SYSTEM_FIRST_NODE="n001"

# XXX List of active nodes
export SYSTEM_NODE_NAMES="n001 n002 n003 n004 n005 n006 n007 n008 n009 n010"
export DRIVER_NODE_NAMES="dr01 dr02"

# XXX Node and port where hadoop mgr is listening
export SYSTEM_MGR_TYPE="C"        # C for Cloudera, H for HortonWorks
export SYSTEM_MGR_URL="n001"      # node where either Cloudera or Ambari is running.
export SYSTEM_MGR_PORT=7180       # port where the manager is listening
export SYSTEM_MGR_USR=admin
export SYSTEM_MGR_PASS=admin
export SYSTEM_MGR_CLUSTER="cluster"
export SYSTEM_MGR_SERVICE="hbase"

# XXX Node and port where hbase namemgr is listening
export SYSTEM_NAMEMGR_URL="n003"
export SYSTEM_NAMEMGR_PORT=60010
export SYSTEM_NAMEMGR_LOGNAME="hbase-cmf-hbase-MASTER-n003.cm.cluster.log.out"
export SYSTEM_REGIONSERVER_PORT=60020

# XXX Maximum configured mxo srvers
export MAX_MXOSRVR=1280

# XXX Default Scale and Streams for various workloads 
export DEBITCREDIT_SCALE=1024
export DEBITCREDIT_STREAMS=1024
export ORDERENTRY_SCALE=1024
export ORDERENTRY_STREAMS=1024
export YCSB_SCALE=20
export YCSB_STREAMS=1024
export MAX_ED_SCALE=27
export TPCH_SCALE=100
export TPCH_STREAMS=8
export RABO_STREAMS=16
export HPIT_STREAMS=16
export BTIQ_STREAMS=16

# XXX Logon user, password and node:port where dcs is listening 
export SYSTEM_DCS_URL="n001:37800"
export SYSTEM_DCS_USR=trafodion
export SYSTEM_DCS_PASSWD=traf123

# XXX Nothing below here should change in profile

# Java version which overrides whatever is on the system
export JAVA_HOME=${JAVABENCH_HOME}/java/jdk1.7.0_67
if [ $(echo _${PATH}_ | grep -c -e "${JAVA_HOME}/bin") -eq 0 ] ; then
    export PATH=${JAVA_HOME}/bin:${PATH}
fi
#export PATH=${JAVA_HOME}/bin:${PATH}

# JavaBench
if [ $(echo _${CLASSPATH}_ | grep -c -e "${JAVABENCH_HOME}/lib/") -eq 0 ] ; then
    export CLASSPATH=${JAVABENCH_HOME}/lib/:${CLASSPATH}
fi
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "${JAVABENCH_HOME}/lib/*") -eq 0 ] ; then
    export CLASSPATH="${JAVABENCH_HOME}/lib/*:${CLASSPATH}"
fi
#for CURRJAR in ${JAVABENCH_HOME}/lib/*.jar  ; do
#    export CLASSPATH=${CURRJAR}:${CLASSPATH}
#done

# JavaBench bin
if [ $(echo _${PATH}_ | grep -c -e "${JAVABENCH_HOME}/bin") -eq 0 ] ; then
    export PATH=${JAVABENCH_HOME}/bin:${PATH}
fi

# measure routines
export MEASURE_PATH=${JAVABENCH_HOME}/measure
if [ -d ${MEASURE_PATH} ] && [ $(echo _${PATH}_ | grep -c -e "$(ls -d ${MEASURE_PATH})") -eq 0 ] ; then
    export PATH=${MEASURE_PATH}:${PATH}
fi

#  The following is a "remote driver" configuration.  
#
# Trafodion JDBC driver
# T4
if [ $(echo _${CLASSPATH}_ | grep -c -e "${JAVABENCH_HOME}/clients/trafodion-1.2.0/jdbc/lib/jdbcT4.jar") -eq 0 ] ; then
    export CLASSPATH=${JAVABENCH_HOME}/clients/trafodion-1.2.0/jdbc/lib/jdbcT4.jar:${CLASSPATH}
fi

# Trafodion CI
export TRAFCI_COMMAND="${JAVABENCH_HOME}/clients/trafodion-1.2.0/trafci/bin/trafci.sh -host $SYSTEM_DCS_URL -user $SYSTEM_DCS_USR -password $SYSTEM_DCS_PASSWD"
if [ $(echo _${CLASSPATH}_ | grep -c -e "${JAVABENCH_HOME}/clients/trafodion-1.2.0/trafci/lib/trafci.jar") -eq 0 ] ; then
    export CLASSPATH=${JAVABENCH_HOME}/clients/trafodion-1.2.0/trafci/lib/trafci.jar:${CLASSPATH}
fi
alias trafci="${TRAFCI_COMMAND}"

# Phoenix
if [ $(echo _${CLASSPATH}_ | grep -c -e "${JAVABENCH_HOME}/clients/phoenix/phoenix-4.1.0-bin/hadoop2/phoenix-4.1.0-client-hadoop2.jar") -eq 0 ] ; then
    export CLASSPATH=${JAVABENCH_HOME}/clients/phoenix/phoenix-4.1.0-bin/hadoop2/phoenix-4.1.0-client-hadoop2.jar:${CLASSPATH}
fi
# sqlline
alias sqlline="${JAVABENCH_HOME}/clients/phoenix/phoenix-4.1.0-bin/hadoop2/bin/sqlline.py n005"
alias psql="${JAVABENCH_HOME}/clients/phoenix/phoenix-4.1.0-bin/hadoop2/bin/psql.py "

# Hadoop
if [ $(echo _${CLASSPATH}_ | grep -c -e "/etc/hadoop/conf/") -eq 0 ] ; then
    export CLASSPATH=/etc/hadoop/conf/:${CLASSPATH}
fi
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "/usr/lib/hadoop/*") -eq 0 ] ; then
    export CLASSPATH="/usr/lib/hadoop/*:${CLASSPATH}"
fi
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "/usr/lib/hadoop/lib/*") -eq 0 ] ; then
    export CLASSPATH="/usr/lib/hadoop/lib/*:${CLASSPATH}"
fi
#for CURRJAR in /usr/lib/hadoop/*.jar /usr/lib/hadoop/lib/*.jar ; do
#    export CLASSPATH=${CURRJAR}:${CLASSPATH}
#done

# Hbase
if [ $(echo _${CLASSPATH}_ | grep -c -e "/etc/hbase/conf/hbase-site.xml") -eq 0 ] ; then
    export CLASSPATH=/etc/hbase/conf/hbase-site.xml:${CLASSPATH}
fi
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "/usr/lib/hbase/*") -eq 0 ] ; then
    export CLASSPATH="/usr/lib/hbase/*:${CLASSPATH}"
fi
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "/usr/lib/hbase/lib/*") -eq 0 ] ; then
    export CLASSPATH="/usr/lib/hbase/lib/*:${CLASSPATH}"
fi
#for CURRJAR in /usr/lib/hbase/*.jar /usr/lib/hbase/lib/*.jar ; do
#    export CLASSPATH=${CURRJAR}:${CLASSPATH}
#done

# Hive
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "/usr/lib/hive/*") -eq 0 ] ; then
    export CLASSPATH="/usr/lib/hive/*:${CLASSPATH}"
fi
if [ $(echo _${CLASSPATH}_ | grep -Fc -e "/usr/lib/hive/lib/*") -eq 0 ] ; then
    export CLASSPATH="/usr/lib/hive/lib/*:${CLASSPATH}"
fi
#for CURRJAR in /usr/lib/hive/*.jar /usr/lib/hive/lib/*.jar ; do
#    export CLASSPATH=${CURRJAR}:${CLASSPATH}
#done

# YCSB
if [ $(echo _${CLASSPATH}_ | grep -c -e "${JAVABENCH_HOME}/clients/ycsb-0.1.4/core/lib/core-0.1.4.jar") -eq 0 ] ; then
    export CLASSPATH=${JAVABENCH_HOME}/clients/ycsb-0.1.4/core/lib/core-0.1.4.jar:${CLASSPATH}
fi

# MySQL
# export CLASSPATH=${JAVABENCH_HOME}/jdbc/mysql/mysql-connector-java-5.1.30/mysql-connector-java-5.1.30-bin.jar:${CLASSPATH}

export CI_COMMAND=${TRAFCI_COMMAND}

